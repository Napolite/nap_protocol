{
	"id": "7470dfe523161dbab2cce1a2dcf9e9e6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0;\n\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\";\n\ninterface ERC20 {\n    function name() external view returns(string memory);\n    function symbol() external view returns(string memory);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address who) external view returns (uint);\n    function transfer(address to, uint value) external;\n    event Transfer(address indexed from, address indexed to, uint value);\n    function allowance(address owner, address spender) external returns (uint);\n    function transferFrom(address from, address to, uint value) external;\n    function approve(address spender, uint value) external;\n    event Approval(address indexed owner, address indexed spender, uint value);\n}\n\ncontract Pool {\n    using SafeERC20 for ERC20;\n    using SafeMath for uint;\n\n    event Deposit(string message);\n\n    function deposit(address token, uint amount) public{\n        ERC20(token).transferFrom(msg.sender, address(this), amount);\n\n        emit Deposit(\"deposit completed\");\n    }\n\n\n    function withdrawal(address token, uint amount) public{\n        ERC20(token).transfer(msg.sender, amount);\n\n        emit Deposit(\"Withdrawal Completed\");\n    }\n\n    function exchange(address from, address to, uint amount) public{\n        uint tokenBalance = ERC20(to).balanceOf(address(this));\n        \n        require(from != to, \"Cannot perfrom this action on same tokens\");\n        require(tokenBalance >amount, \"We don't have enough for this swap\");\n\n        deposit(from, amount);\n        withdrawal(to, amount);\n\n        emit Deposit(\"withdrawal completed\");\n    }\n\n\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol": {
				"ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":{\"keccak256\":\"0x1b47b537450535baf0c661d1f60c3fa23da4e02655a8351d3a8a8d654c5f6475\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://61dbe089248d8e04b360bb91709aa78a878d0028fbacd42a1b29bb5af900b147\",\"dweb:/ipfs/QmdKnheSH1rAvc2rceroFCTSYRMQfi5gaqpQcUr63TmTBw\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0\",\"dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x41506aed9d344097236aaff05216674af38e177288787519d49b71f6396c4af8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47a4a1d11e3e7c610b12da694f3d406527027e7963cfb7bf302af0b902615d7e\",\"dweb:/ipfs/QmeDwStpqytetvjaq7KA7cQRVPDwxmZySYdEXkvw2DDxsr\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":{\"keccak256\":\"0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71\",\"dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f\",\"dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Pool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "exchange",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":979:1849  contract Pool {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":979:1849  contract Pool {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x47e7ef24\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5a6b26ba\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x969e3756\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1096:1268  function deposit(address token, uint amount) public{... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      stop\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1275:1434  function withdrawal(address token, uint amount) public{... */\n    tag_4:\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_11\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_11:\n      tag_12\n      jump\t// in\n    tag_10:\n      stop\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1440:1845  function exchange(address from, address to, uint amount) public{... */\n    tag_5:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      stop\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1096:1268  function deposit(address token, uint amount) public{... */\n    tag_9:\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1163:1168  token */\n      dup2\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1157:1182  ERC20(token).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1183:1193  msg.sender */\n      caller\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1203:1207  this */\n      address\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1210:1216  amount */\n      dup5\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1157:1217  ERC20(token).transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_18\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_22\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_22:\n      pop\n      pop\n      pop\n      pop\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1233:1261  Deposit(\"deposit completed\") */\n      0x80dfa405646e0f90c813e8ee74f4f5f0a573809b1cb830e95cd1ebcbea04ccdc\n      mload(0x40)\n      tag_23\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1096:1268  function deposit(address token, uint amount) public{... */\n      pop\n      pop\n      jump\t// out\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1275:1434  function withdrawal(address token, uint amount) public{... */\n    tag_12:\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1345:1350  token */\n      dup2\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1339:1360  ERC20(token).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1361:1371  msg.sender */\n      caller\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1373:1379  amount */\n      dup4\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1339:1380  ERC20(token).transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_26\n      swap3\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_30\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_30:\n      pop\n      pop\n      pop\n      pop\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1396:1427  Deposit(\"Withdrawal Completed\") */\n      0x80dfa405646e0f90c813e8ee74f4f5f0a573809b1cb830e95cd1ebcbea04ccdc\n      mload(0x40)\n      tag_31\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1275:1434  function withdrawal(address token, uint amount) public{... */\n      pop\n      pop\n      jump\t// out\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1440:1845  function exchange(address from, address to, uint amount) public{... */\n    tag_16:\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1513:1530  uint tokenBalance */\n      0x00\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1539:1541  to */\n      dup3\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1533:1552  ERC20(to).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1561:1565  this */\n      address\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1533:1567  ERC20(to).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_38\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_38:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1513:1567  uint tokenBalance = ERC20(to).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1602:1604  to */\n      dup3\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1594:1604  from != to */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1594:1598  from */\n      dup5\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1594:1604  from != to */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1586:1650  require(from != to, \"Cannot perfrom this action on same tokens\") */\n      tag_41\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_42\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_41:\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1682:1688  amount */\n      dup2\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1668:1680  tokenBalance */\n      dup2\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1668:1688  tokenBalance >amount */\n      gt\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1660:1727  require(tokenBalance >amount, \"We don't have enough for this swap\") */\n      tag_44\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_45\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_44:\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1738:1759  deposit(from, amount) */\n      tag_47\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1746:1750  from */\n      dup5\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1752:1758  amount */\n      dup4\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1738:1745  deposit */\n      tag_9\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1738:1759  deposit(from, amount) */\n      jump\t// in\n    tag_47:\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1769:1791  withdrawal(to, amount) */\n      tag_48\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1780:1782  to */\n      dup4\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1784:1790  amount */\n      dup4\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1769:1779  withdrawal */\n      tag_12\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1769:1791  withdrawal(to, amount) */\n      jump\t// in\n    tag_48:\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1807:1838  Deposit(\"withdrawal completed\") */\n      0x80dfa405646e0f90c813e8ee74f4f5f0a573809b1cb830e95cd1ebcbea04ccdc\n      mload(0x40)\n      tag_49\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1503:1845  {... */\n      pop\n        /* \"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":1440:1845  function exchange(address from, address to, uint amount) public{... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_52:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_54\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_56:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_58\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:440   */\n    tag_60:\n        /* \"#utility.yul\":354:359   */\n      0x00\n        /* \"#utility.yul\":385:391   */\n      dup2\n        /* \"#utility.yul\":379:392   */\n      mload\n        /* \"#utility.yul\":370:392   */\n      swap1\n      pop\n        /* \"#utility.yul\":401:434   */\n      tag_62\n        /* \"#utility.yul\":428:433   */\n      dup2\n        /* \"#utility.yul\":401:434   */\n      tag_59\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":297:440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":446:1065   */\n    tag_15:\n        /* \"#utility.yul\":523:529   */\n      0x00\n        /* \"#utility.yul\":531:537   */\n      dup1\n        /* \"#utility.yul\":539:545   */\n      0x00\n        /* \"#utility.yul\":588:590   */\n      0x60\n        /* \"#utility.yul\":576:585   */\n      dup5\n        /* \"#utility.yul\":567:574   */\n      dup7\n        /* \"#utility.yul\":563:586   */\n      sub\n        /* \"#utility.yul\":559:591   */\n      slt\n        /* \"#utility.yul\":556:675   */\n      iszero\n      tag_64\n      jumpi\n        /* \"#utility.yul\":594:673   */\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":556:675   */\n    tag_64:\n        /* \"#utility.yul\":714:715   */\n      0x00\n        /* \"#utility.yul\":739:792   */\n      tag_67\n        /* \"#utility.yul\":784:791   */\n      dup7\n        /* \"#utility.yul\":775:781   */\n      dup3\n        /* \"#utility.yul\":764:773   */\n      dup8\n        /* \"#utility.yul\":760:782   */\n      add\n        /* \"#utility.yul\":739:792   */\n      tag_52\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":729:792   */\n      swap4\n      pop\n        /* \"#utility.yul\":685:802   */\n      pop\n        /* \"#utility.yul\":841:843   */\n      0x20\n        /* \"#utility.yul\":867:920   */\n      tag_68\n        /* \"#utility.yul\":912:919   */\n      dup7\n        /* \"#utility.yul\":903:909   */\n      dup3\n        /* \"#utility.yul\":892:901   */\n      dup8\n        /* \"#utility.yul\":888:910   */\n      add\n        /* \"#utility.yul\":867:920   */\n      tag_52\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":857:920   */\n      swap3\n      pop\n        /* \"#utility.yul\":812:930   */\n      pop\n        /* \"#utility.yul\":969:971   */\n      0x40\n        /* \"#utility.yul\":995:1048   */\n      tag_69\n        /* \"#utility.yul\":1040:1047   */\n      dup7\n        /* \"#utility.yul\":1031:1037   */\n      dup3\n        /* \"#utility.yul\":1020:1029   */\n      dup8\n        /* \"#utility.yul\":1016:1038   */\n      add\n        /* \"#utility.yul\":995:1048   */\n      tag_56\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":985:1048   */\n      swap2\n      pop\n        /* \"#utility.yul\":940:1058   */\n      pop\n        /* \"#utility.yul\":446:1065   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1071:1545   */\n    tag_8:\n        /* \"#utility.yul\":1139:1145   */\n      0x00\n        /* \"#utility.yul\":1147:1153   */\n      dup1\n        /* \"#utility.yul\":1196:1198   */\n      0x40\n        /* \"#utility.yul\":1184:1193   */\n      dup4\n        /* \"#utility.yul\":1175:1182   */\n      dup6\n        /* \"#utility.yul\":1171:1194   */\n      sub\n        /* \"#utility.yul\":1167:1199   */\n      slt\n        /* \"#utility.yul\":1164:1283   */\n      iszero\n      tag_71\n      jumpi\n        /* \"#utility.yul\":1202:1281   */\n      tag_72\n      tag_66\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1164:1283   */\n    tag_71:\n        /* \"#utility.yul\":1322:1323   */\n      0x00\n        /* \"#utility.yul\":1347:1400   */\n      tag_73\n        /* \"#utility.yul\":1392:1399   */\n      dup6\n        /* \"#utility.yul\":1383:1389   */\n      dup3\n        /* \"#utility.yul\":1372:1381   */\n      dup7\n        /* \"#utility.yul\":1368:1390   */\n      add\n        /* \"#utility.yul\":1347:1400   */\n      tag_52\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1337:1400   */\n      swap3\n      pop\n        /* \"#utility.yul\":1293:1410   */\n      pop\n        /* \"#utility.yul\":1449:1451   */\n      0x20\n        /* \"#utility.yul\":1475:1528   */\n      tag_74\n        /* \"#utility.yul\":1520:1527   */\n      dup6\n        /* \"#utility.yul\":1511:1517   */\n      dup3\n        /* \"#utility.yul\":1500:1509   */\n      dup7\n        /* \"#utility.yul\":1496:1518   */\n      add\n        /* \"#utility.yul\":1475:1528   */\n      tag_56\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1465:1528   */\n      swap2\n      pop\n        /* \"#utility.yul\":1420:1538   */\n      pop\n        /* \"#utility.yul\":1071:1545   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1551:1902   */\n    tag_40:\n        /* \"#utility.yul\":1621:1627   */\n      0x00\n        /* \"#utility.yul\":1670:1672   */\n      0x20\n        /* \"#utility.yul\":1658:1667   */\n      dup3\n        /* \"#utility.yul\":1649:1656   */\n      dup5\n        /* \"#utility.yul\":1645:1668   */\n      sub\n        /* \"#utility.yul\":1641:1673   */\n      slt\n        /* \"#utility.yul\":1638:1757   */\n      iszero\n      tag_76\n      jumpi\n        /* \"#utility.yul\":1676:1755   */\n      tag_77\n      tag_66\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":1638:1757   */\n    tag_76:\n        /* \"#utility.yul\":1796:1797   */\n      0x00\n        /* \"#utility.yul\":1821:1885   */\n      tag_78\n        /* \"#utility.yul\":1877:1884   */\n      dup5\n        /* \"#utility.yul\":1868:1874   */\n      dup3\n        /* \"#utility.yul\":1857:1866   */\n      dup6\n        /* \"#utility.yul\":1853:1875   */\n      add\n        /* \"#utility.yul\":1821:1885   */\n      tag_60\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1811:1885   */\n      swap2\n      pop\n        /* \"#utility.yul\":1767:1895   */\n      pop\n        /* \"#utility.yul\":1551:1902   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1908:2026   */\n    tag_79:\n        /* \"#utility.yul\":1995:2019   */\n      tag_81\n        /* \"#utility.yul\":2013:2018   */\n      dup2\n        /* \"#utility.yul\":1995:2019   */\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1990:1993   */\n      dup3\n        /* \"#utility.yul\":1983:2020   */\n      mstore\n        /* \"#utility.yul\":1908:2026   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2032:2398   */\n    tag_83:\n        /* \"#utility.yul\":2174:2177   */\n      0x00\n        /* \"#utility.yul\":2195:2262   */\n      tag_85\n        /* \"#utility.yul\":2259:2261   */\n      0x29\n        /* \"#utility.yul\":2254:2257   */\n      dup4\n        /* \"#utility.yul\":2195:2262   */\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":2188:2262   */\n      swap2\n      pop\n        /* \"#utility.yul\":2271:2364   */\n      tag_87\n        /* \"#utility.yul\":2360:2363   */\n      dup3\n        /* \"#utility.yul\":2271:2364   */\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":2389:2391   */\n      0x40\n        /* \"#utility.yul\":2384:2387   */\n      dup3\n        /* \"#utility.yul\":2380:2392   */\n      add\n        /* \"#utility.yul\":2373:2392   */\n      swap1\n      pop\n        /* \"#utility.yul\":2032:2398   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2404:2770   */\n    tag_89:\n        /* \"#utility.yul\":2546:2549   */\n      0x00\n        /* \"#utility.yul\":2567:2634   */\n      tag_91\n        /* \"#utility.yul\":2631:2633   */\n      0x22\n        /* \"#utility.yul\":2626:2629   */\n      dup4\n        /* \"#utility.yul\":2567:2634   */\n      tag_86\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":2560:2634   */\n      swap2\n      pop\n        /* \"#utility.yul\":2643:2736   */\n      tag_92\n        /* \"#utility.yul\":2732:2735   */\n      dup3\n        /* \"#utility.yul\":2643:2736   */\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":2761:2763   */\n      0x40\n        /* \"#utility.yul\":2756:2759   */\n      dup3\n        /* \"#utility.yul\":2752:2764   */\n      add\n        /* \"#utility.yul\":2745:2764   */\n      swap1\n      pop\n        /* \"#utility.yul\":2404:2770   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2776:3142   */\n    tag_94:\n        /* \"#utility.yul\":2918:2921   */\n      0x00\n        /* \"#utility.yul\":2939:3006   */\n      tag_96\n        /* \"#utility.yul\":3003:3005   */\n      0x11\n        /* \"#utility.yul\":2998:3001   */\n      dup4\n        /* \"#utility.yul\":2939:3006   */\n      tag_86\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":2932:3006   */\n      swap2\n      pop\n        /* \"#utility.yul\":3015:3108   */\n      tag_97\n        /* \"#utility.yul\":3104:3107   */\n      dup3\n        /* \"#utility.yul\":3015:3108   */\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":3133:3135   */\n      0x20\n        /* \"#utility.yul\":3128:3131   */\n      dup3\n        /* \"#utility.yul\":3124:3136   */\n      add\n        /* \"#utility.yul\":3117:3136   */\n      swap1\n      pop\n        /* \"#utility.yul\":2776:3142   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3148:3514   */\n    tag_99:\n        /* \"#utility.yul\":3290:3293   */\n      0x00\n        /* \"#utility.yul\":3311:3378   */\n      tag_101\n        /* \"#utility.yul\":3375:3377   */\n      0x14\n        /* \"#utility.yul\":3370:3373   */\n      dup4\n        /* \"#utility.yul\":3311:3378   */\n      tag_86\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":3304:3378   */\n      swap2\n      pop\n        /* \"#utility.yul\":3387:3480   */\n      tag_102\n        /* \"#utility.yul\":3476:3479   */\n      dup3\n        /* \"#utility.yul\":3387:3480   */\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":3505:3507   */\n      0x20\n        /* \"#utility.yul\":3500:3503   */\n      dup3\n        /* \"#utility.yul\":3496:3508   */\n      add\n        /* \"#utility.yul\":3489:3508   */\n      swap1\n      pop\n        /* \"#utility.yul\":3148:3514   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3520:3886   */\n    tag_104:\n        /* \"#utility.yul\":3662:3665   */\n      0x00\n        /* \"#utility.yul\":3683:3750   */\n      tag_106\n        /* \"#utility.yul\":3747:3749   */\n      0x14\n        /* \"#utility.yul\":3742:3745   */\n      dup4\n        /* \"#utility.yul\":3683:3750   */\n      tag_86\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":3676:3750   */\n      swap2\n      pop\n        /* \"#utility.yul\":3759:3852   */\n      tag_107\n        /* \"#utility.yul\":3848:3851   */\n      dup3\n        /* \"#utility.yul\":3759:3852   */\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":3877:3879   */\n      0x20\n        /* \"#utility.yul\":3872:3875   */\n      dup3\n        /* \"#utility.yul\":3868:3880   */\n      add\n        /* \"#utility.yul\":3861:3880   */\n      swap1\n      pop\n        /* \"#utility.yul\":3520:3886   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3892:4010   */\n    tag_109:\n        /* \"#utility.yul\":3979:4003   */\n      tag_111\n        /* \"#utility.yul\":3997:4002   */\n      dup2\n        /* \"#utility.yul\":3979:4003   */\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":3974:3977   */\n      dup3\n        /* \"#utility.yul\":3967:4004   */\n      mstore\n        /* \"#utility.yul\":3892:4010   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4016:4238   */\n    tag_35:\n        /* \"#utility.yul\":4109:4113   */\n      0x00\n        /* \"#utility.yul\":4147:4149   */\n      0x20\n        /* \"#utility.yul\":4136:4145   */\n      dup3\n        /* \"#utility.yul\":4132:4150   */\n      add\n        /* \"#utility.yul\":4124:4150   */\n      swap1\n      pop\n        /* \"#utility.yul\":4160:4231   */\n      tag_114\n        /* \"#utility.yul\":4228:4229   */\n      0x00\n        /* \"#utility.yul\":4217:4226   */\n      dup4\n        /* \"#utility.yul\":4213:4230   */\n      add\n        /* \"#utility.yul\":4204:4210   */\n      dup5\n        /* \"#utility.yul\":4160:4231   */\n      tag_79\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":4016:4238   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4244:4686   */\n    tag_19:\n        /* \"#utility.yul\":4393:4397   */\n      0x00\n        /* \"#utility.yul\":4431:4433   */\n      0x60\n        /* \"#utility.yul\":4420:4429   */\n      dup3\n        /* \"#utility.yul\":4416:4434   */\n      add\n        /* \"#utility.yul\":4408:4434   */\n      swap1\n      pop\n        /* \"#utility.yul\":4444:4515   */\n      tag_116\n        /* \"#utility.yul\":4512:4513   */\n      0x00\n        /* \"#utility.yul\":4501:4510   */\n      dup4\n        /* \"#utility.yul\":4497:4514   */\n      add\n        /* \"#utility.yul\":4488:4494   */\n      dup7\n        /* \"#utility.yul\":4444:4515   */\n      tag_79\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":4525:4597   */\n      tag_117\n        /* \"#utility.yul\":4593:4595   */\n      0x20\n        /* \"#utility.yul\":4582:4591   */\n      dup4\n        /* \"#utility.yul\":4578:4596   */\n      add\n        /* \"#utility.yul\":4569:4575   */\n      dup6\n        /* \"#utility.yul\":4525:4597   */\n      tag_79\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":4607:4679   */\n      tag_118\n        /* \"#utility.yul\":4675:4677   */\n      0x40\n        /* \"#utility.yul\":4664:4673   */\n      dup4\n        /* \"#utility.yul\":4660:4678   */\n      add\n        /* \"#utility.yul\":4651:4657   */\n      dup5\n        /* \"#utility.yul\":4607:4679   */\n      tag_109\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":4244:4686   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4692:5024   */\n    tag_27:\n        /* \"#utility.yul\":4813:4817   */\n      0x00\n        /* \"#utility.yul\":4851:4853   */\n      0x40\n        /* \"#utility.yul\":4840:4849   */\n      dup3\n        /* \"#utility.yul\":4836:4854   */\n      add\n        /* \"#utility.yul\":4828:4854   */\n      swap1\n      pop\n        /* \"#utility.yul\":4864:4935   */\n      tag_120\n        /* \"#utility.yul\":4932:4933   */\n      0x00\n        /* \"#utility.yul\":4921:4930   */\n      dup4\n        /* \"#utility.yul\":4917:4934   */\n      add\n        /* \"#utility.yul\":4908:4914   */\n      dup6\n        /* \"#utility.yul\":4864:4935   */\n      tag_79\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":4945:5017   */\n      tag_121\n        /* \"#utility.yul\":5013:5015   */\n      0x20\n        /* \"#utility.yul\":5002:5011   */\n      dup4\n        /* \"#utility.yul\":4998:5016   */\n      add\n        /* \"#utility.yul\":4989:4995   */\n      dup5\n        /* \"#utility.yul\":4945:5017   */\n      tag_109\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":4692:5024   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5030:5449   */\n    tag_43:\n        /* \"#utility.yul\":5196:5200   */\n      0x00\n        /* \"#utility.yul\":5234:5236   */\n      0x20\n        /* \"#utility.yul\":5223:5232   */\n      dup3\n        /* \"#utility.yul\":5219:5237   */\n      add\n        /* \"#utility.yul\":5211:5237   */\n      swap1\n      pop\n        /* \"#utility.yul\":5283:5292   */\n      dup2\n        /* \"#utility.yul\":5277:5281   */\n      dup2\n        /* \"#utility.yul\":5273:5293   */\n      sub\n        /* \"#utility.yul\":5269:5270   */\n      0x00\n        /* \"#utility.yul\":5258:5267   */\n      dup4\n        /* \"#utility.yul\":5254:5271   */\n      add\n        /* \"#utility.yul\":5247:5294   */\n      mstore\n        /* \"#utility.yul\":5311:5442   */\n      tag_123\n        /* \"#utility.yul\":5437:5441   */\n      dup2\n        /* \"#utility.yul\":5311:5442   */\n      tag_83\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":5303:5442   */\n      swap1\n      pop\n        /* \"#utility.yul\":5030:5449   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5455:5874   */\n    tag_46:\n        /* \"#utility.yul\":5621:5625   */\n      0x00\n        /* \"#utility.yul\":5659:5661   */\n      0x20\n        /* \"#utility.yul\":5648:5657   */\n      dup3\n        /* \"#utility.yul\":5644:5662   */\n      add\n        /* \"#utility.yul\":5636:5662   */\n      swap1\n      pop\n        /* \"#utility.yul\":5708:5717   */\n      dup2\n        /* \"#utility.yul\":5702:5706   */\n      dup2\n        /* \"#utility.yul\":5698:5718   */\n      sub\n        /* \"#utility.yul\":5694:5695   */\n      0x00\n        /* \"#utility.yul\":5683:5692   */\n      dup4\n        /* \"#utility.yul\":5679:5696   */\n      add\n        /* \"#utility.yul\":5672:5719   */\n      mstore\n        /* \"#utility.yul\":5736:5867   */\n      tag_125\n        /* \"#utility.yul\":5862:5866   */\n      dup2\n        /* \"#utility.yul\":5736:5867   */\n      tag_89\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":5728:5867   */\n      swap1\n      pop\n        /* \"#utility.yul\":5455:5874   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5880:6299   */\n    tag_24:\n        /* \"#utility.yul\":6046:6050   */\n      0x00\n        /* \"#utility.yul\":6084:6086   */\n      0x20\n        /* \"#utility.yul\":6073:6082   */\n      dup3\n        /* \"#utility.yul\":6069:6087   */\n      add\n        /* \"#utility.yul\":6061:6087   */\n      swap1\n      pop\n        /* \"#utility.yul\":6133:6142   */\n      dup2\n        /* \"#utility.yul\":6127:6131   */\n      dup2\n        /* \"#utility.yul\":6123:6143   */\n      sub\n        /* \"#utility.yul\":6119:6120   */\n      0x00\n        /* \"#utility.yul\":6108:6117   */\n      dup4\n        /* \"#utility.yul\":6104:6121   */\n      add\n        /* \"#utility.yul\":6097:6144   */\n      mstore\n        /* \"#utility.yul\":6161:6292   */\n      tag_127\n        /* \"#utility.yul\":6287:6291   */\n      dup2\n        /* \"#utility.yul\":6161:6292   */\n      tag_94\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":6153:6292   */\n      swap1\n      pop\n        /* \"#utility.yul\":5880:6299   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6305:6724   */\n    tag_50:\n        /* \"#utility.yul\":6471:6475   */\n      0x00\n        /* \"#utility.yul\":6509:6511   */\n      0x20\n        /* \"#utility.yul\":6498:6507   */\n      dup3\n        /* \"#utility.yul\":6494:6512   */\n      add\n        /* \"#utility.yul\":6486:6512   */\n      swap1\n      pop\n        /* \"#utility.yul\":6558:6567   */\n      dup2\n        /* \"#utility.yul\":6552:6556   */\n      dup2\n        /* \"#utility.yul\":6548:6568   */\n      sub\n        /* \"#utility.yul\":6544:6545   */\n      0x00\n        /* \"#utility.yul\":6533:6542   */\n      dup4\n        /* \"#utility.yul\":6529:6546   */\n      add\n        /* \"#utility.yul\":6522:6569   */\n      mstore\n        /* \"#utility.yul\":6586:6717   */\n      tag_129\n        /* \"#utility.yul\":6712:6716   */\n      dup2\n        /* \"#utility.yul\":6586:6717   */\n      tag_99\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":6578:6717   */\n      swap1\n      pop\n        /* \"#utility.yul\":6305:6724   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6730:7149   */\n    tag_32:\n        /* \"#utility.yul\":6896:6900   */\n      0x00\n        /* \"#utility.yul\":6934:6936   */\n      0x20\n        /* \"#utility.yul\":6923:6932   */\n      dup3\n        /* \"#utility.yul\":6919:6937   */\n      add\n        /* \"#utility.yul\":6911:6937   */\n      swap1\n      pop\n        /* \"#utility.yul\":6983:6992   */\n      dup2\n        /* \"#utility.yul\":6977:6981   */\n      dup2\n        /* \"#utility.yul\":6973:6993   */\n      sub\n        /* \"#utility.yul\":6969:6970   */\n      0x00\n        /* \"#utility.yul\":6958:6967   */\n      dup4\n        /* \"#utility.yul\":6954:6971   */\n      add\n        /* \"#utility.yul\":6947:6994   */\n      mstore\n        /* \"#utility.yul\":7011:7142   */\n      tag_131\n        /* \"#utility.yul\":7137:7141   */\n      dup2\n        /* \"#utility.yul\":7011:7142   */\n      tag_104\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":7003:7142   */\n      swap1\n      pop\n        /* \"#utility.yul\":6730:7149   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7236:7405   */\n    tag_86:\n        /* \"#utility.yul\":7320:7331   */\n      0x00\n        /* \"#utility.yul\":7354:7360   */\n      dup3\n        /* \"#utility.yul\":7349:7352   */\n      dup3\n        /* \"#utility.yul\":7342:7361   */\n      mstore\n        /* \"#utility.yul\":7394:7398   */\n      0x20\n        /* \"#utility.yul\":7389:7392   */\n      dup3\n        /* \"#utility.yul\":7385:7399   */\n      add\n        /* \"#utility.yul\":7370:7399   */\n      swap1\n      pop\n        /* \"#utility.yul\":7236:7405   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7411:7507   */\n    tag_82:\n        /* \"#utility.yul\":7448:7455   */\n      0x00\n        /* \"#utility.yul\":7477:7501   */\n      tag_136\n        /* \"#utility.yul\":7495:7500   */\n      dup3\n        /* \"#utility.yul\":7477:7501   */\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":7466:7501   */\n      swap1\n      pop\n        /* \"#utility.yul\":7411:7507   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7513:7639   */\n    tag_137:\n        /* \"#utility.yul\":7550:7557   */\n      0x00\n        /* \"#utility.yul\":7590:7632   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7583:7588   */\n      dup3\n        /* \"#utility.yul\":7579:7633   */\n      and\n        /* \"#utility.yul\":7568:7633   */\n      swap1\n      pop\n        /* \"#utility.yul\":7513:7639   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7645:7722   */\n    tag_112:\n        /* \"#utility.yul\":7682:7689   */\n      0x00\n        /* \"#utility.yul\":7711:7716   */\n      dup2\n        /* \"#utility.yul\":7700:7716   */\n      swap1\n      pop\n        /* \"#utility.yul\":7645:7722   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7851:7968   */\n    tag_66:\n        /* \"#utility.yul\":7960:7961   */\n      0x00\n        /* \"#utility.yul\":7957:7958   */\n      dup1\n        /* \"#utility.yul\":7950:7962   */\n      revert\n        /* \"#utility.yul\":7974:8202   */\n    tag_88:\n        /* \"#utility.yul\":8114:8148   */\n      0x43616e6e6f742070657266726f6d207468697320616374696f6e206f6e207361\n        /* \"#utility.yul\":8110:8111   */\n      0x00\n        /* \"#utility.yul\":8102:8108   */\n      dup3\n        /* \"#utility.yul\":8098:8112   */\n      add\n        /* \"#utility.yul\":8091:8149   */\n      mstore\n        /* \"#utility.yul\":8183:8194   */\n      0x6d6520746f6b656e730000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8178:8180   */\n      0x20\n        /* \"#utility.yul\":8170:8176   */\n      dup3\n        /* \"#utility.yul\":8166:8181   */\n      add\n        /* \"#utility.yul\":8159:8195   */\n      mstore\n        /* \"#utility.yul\":7974:8202   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8208:8429   */\n    tag_93:\n        /* \"#utility.yul\":8348:8382   */\n      0x576520646f6e2774206861766520656e6f75676820666f722074686973207377\n        /* \"#utility.yul\":8344:8345   */\n      0x00\n        /* \"#utility.yul\":8336:8342   */\n      dup3\n        /* \"#utility.yul\":8332:8346   */\n      add\n        /* \"#utility.yul\":8325:8383   */\n      mstore\n        /* \"#utility.yul\":8417:8421   */\n      0x6170000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8412:8414   */\n      0x20\n        /* \"#utility.yul\":8404:8410   */\n      dup3\n        /* \"#utility.yul\":8400:8415   */\n      add\n        /* \"#utility.yul\":8393:8422   */\n      mstore\n        /* \"#utility.yul\":8208:8429   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8435:8602   */\n    tag_98:\n        /* \"#utility.yul\":8575:8594   */\n      0x6465706f73697420636f6d706c65746564000000000000000000000000000000\n        /* \"#utility.yul\":8571:8572   */\n      0x00\n        /* \"#utility.yul\":8563:8569   */\n      dup3\n        /* \"#utility.yul\":8559:8573   */\n      add\n        /* \"#utility.yul\":8552:8595   */\n      mstore\n        /* \"#utility.yul\":8435:8602   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8608:8778   */\n    tag_103:\n        /* \"#utility.yul\":8748:8770   */\n      0x7769746864726177616c20636f6d706c65746564000000000000000000000000\n        /* \"#utility.yul\":8744:8745   */\n      0x00\n        /* \"#utility.yul\":8736:8742   */\n      dup3\n        /* \"#utility.yul\":8732:8746   */\n      add\n        /* \"#utility.yul\":8725:8771   */\n      mstore\n        /* \"#utility.yul\":8608:8778   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8784:8954   */\n    tag_108:\n        /* \"#utility.yul\":8924:8946   */\n      0x5769746864726177616c20436f6d706c65746564000000000000000000000000\n        /* \"#utility.yul\":8920:8921   */\n      0x00\n        /* \"#utility.yul\":8912:8918   */\n      dup3\n        /* \"#utility.yul\":8908:8922   */\n      add\n        /* \"#utility.yul\":8901:8947   */\n      mstore\n        /* \"#utility.yul\":8784:8954   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8960:9082   */\n    tag_55:\n        /* \"#utility.yul\":9033:9057   */\n      tag_149\n        /* \"#utility.yul\":9051:9056   */\n      dup2\n        /* \"#utility.yul\":9033:9057   */\n      tag_82\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":9026:9031   */\n      dup2\n        /* \"#utility.yul\":9023:9058   */\n      eq\n        /* \"#utility.yul\":9013:9076   */\n      tag_150\n      jumpi\n        /* \"#utility.yul\":9072:9073   */\n      0x00\n        /* \"#utility.yul\":9069:9070   */\n      dup1\n        /* \"#utility.yul\":9062:9074   */\n      revert\n        /* \"#utility.yul\":9013:9076   */\n    tag_150:\n        /* \"#utility.yul\":8960:9082   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9088:9210   */\n    tag_59:\n        /* \"#utility.yul\":9161:9185   */\n      tag_152\n        /* \"#utility.yul\":9179:9184   */\n      dup2\n        /* \"#utility.yul\":9161:9185   */\n      tag_112\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":9154:9159   */\n      dup2\n        /* \"#utility.yul\":9151:9186   */\n      eq\n        /* \"#utility.yul\":9141:9204   */\n      tag_153\n      jumpi\n        /* \"#utility.yul\":9200:9201   */\n      0x00\n        /* \"#utility.yul\":9197:9198   */\n      dup1\n        /* \"#utility.yul\":9190:9202   */\n      revert\n        /* \"#utility.yul\":9141:9204   */\n    tag_153:\n        /* \"#utility.yul\":9088:9210   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200ce71b5604bb2f2724630e37fc2cada454a63dbcf71845f8c74d2edcf3a1591964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061082b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806347e7ef24146100465780635a6b26ba14610062578063969e37561461007e575b600080fd5b610060600480360381019061005b9190610407565b61009a565b005b61007c60048036038101906100779190610407565b610142565b005b610098600480360381019061009391906103b4565b6101e8565b005b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016100d79392919061055c565b600060405180830381600087803b1580156100f157600080fd5b505af1158015610105573d6000803e3d6000fd5b505050507f80dfa405646e0f90c813e8ee74f4f5f0a573809b1cb830e95cd1ebcbea04ccdc604051610136906105fc565b60405180910390a15050565b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161017d929190610593565b600060405180830381600087803b15801561019757600080fd5b505af11580156101ab573d6000803e3d6000fd5b505050507f80dfa405646e0f90c813e8ee74f4f5f0a573809b1cb830e95cd1ebcbea04ccdc6040516101dc9061063c565b60405180910390a15050565b60008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102239190610541565b60206040518083038186803b15801561023b57600080fd5b505afa15801561024f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102739190610447565b90508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156102e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102db906105bc565b60405180910390fd5b818111610326576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031d906105dc565b60405180910390fd5b610330848361009a565b61033a8383610142565b7f80dfa405646e0f90c813e8ee74f4f5f0a573809b1cb830e95cd1ebcbea04ccdc6040516103679061061c565b60405180910390a150505050565b600081359050610384816107c7565b92915050565b600081359050610399816107de565b92915050565b6000815190506103ae816107de565b92915050565b6000806000606084860312156103cd576103cc6106a9565b5b60006103db86828701610375565b93505060206103ec86828701610375565b92505060406103fd8682870161038a565b9150509250925092565b6000806040838503121561041e5761041d6106a9565b5b600061042c85828601610375565b925050602061043d8582860161038a565b9150509250929050565b60006020828403121561045d5761045c6106a9565b5b600061046b8482850161039f565b91505092915050565b61047d8161066d565b82525050565b600061049060298361065c565b915061049b826106ae565b604082019050919050565b60006104b360228361065c565b91506104be826106fd565b604082019050919050565b60006104d660118361065c565b91506104e18261074c565b602082019050919050565b60006104f960148361065c565b915061050482610775565b602082019050919050565b600061051c60148361065c565b91506105278261079e565b602082019050919050565b61053b8161069f565b82525050565b60006020820190506105566000830184610474565b92915050565b60006060820190506105716000830186610474565b61057e6020830185610474565b61058b6040830184610532565b949350505050565b60006040820190506105a86000830185610474565b6105b56020830184610532565b9392505050565b600060208201905081810360008301526105d581610483565b9050919050565b600060208201905081810360008301526105f5816104a6565b9050919050565b60006020820190508181036000830152610615816104c9565b9050919050565b60006020820190508181036000830152610635816104ec565b9050919050565b600060208201905081810360008301526106558161050f565b9050919050565b600082825260208201905092915050565b60006106788261067f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b7f43616e6e6f742070657266726f6d207468697320616374696f6e206f6e20736160008201527f6d6520746f6b656e730000000000000000000000000000000000000000000000602082015250565b7f576520646f6e2774206861766520656e6f75676820666f72207468697320737760008201527f6170000000000000000000000000000000000000000000000000000000000000602082015250565b7f6465706f73697420636f6d706c65746564000000000000000000000000000000600082015250565b7f7769746864726177616c20636f6d706c65746564000000000000000000000000600082015250565b7f5769746864726177616c20436f6d706c65746564000000000000000000000000600082015250565b6107d08161066d565b81146107db57600080fd5b50565b6107e78161069f565b81146107f257600080fd5b5056fea26469706673582212200ce71b5604bb2f2724630e37fc2cada454a63dbcf71845f8c74d2edcf3a1591964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x82B DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x5A6B26BA EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0x969E3756 EQ PUSH2 0x7E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x407 JUMP JUMPDEST PUSH2 0x9A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x77 SWAP2 SWAP1 PUSH2 0x407 JUMP JUMPDEST PUSH2 0x142 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x98 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x3B4 JUMP JUMPDEST PUSH2 0x1E8 JUMP JUMPDEST STOP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x55C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x105 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x80DFA405646E0F90C813E8EE74F4F5F0A573809B1CB830E95CD1EBCBEA04CCDC PUSH1 0x40 MLOAD PUSH2 0x136 SWAP1 PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D SWAP3 SWAP2 SWAP1 PUSH2 0x593 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x80DFA405646E0F90C813E8EE74F4F5F0A573809B1CB830E95CD1EBCBEA04CCDC PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP1 PUSH2 0x63C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x541 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x447 JUMP JUMPDEST SWAP1 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DB SWAP1 PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 GT PUSH2 0x326 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31D SWAP1 PUSH2 0x5DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x330 DUP5 DUP4 PUSH2 0x9A JUMP JUMPDEST PUSH2 0x33A DUP4 DUP4 PUSH2 0x142 JUMP JUMPDEST PUSH32 0x80DFA405646E0F90C813E8EE74F4F5F0A573809B1CB830E95CD1EBCBEA04CCDC PUSH1 0x40 MLOAD PUSH2 0x367 SWAP1 PUSH2 0x61C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x384 DUP2 PUSH2 0x7C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x399 DUP2 PUSH2 0x7DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3AE DUP2 PUSH2 0x7DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3CD JUMPI PUSH2 0x3CC PUSH2 0x6A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3DB DUP7 DUP3 DUP8 ADD PUSH2 0x375 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3EC DUP7 DUP3 DUP8 ADD PUSH2 0x375 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3FD DUP7 DUP3 DUP8 ADD PUSH2 0x38A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x41E JUMPI PUSH2 0x41D PUSH2 0x6A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x42C DUP6 DUP3 DUP7 ADD PUSH2 0x375 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x43D DUP6 DUP3 DUP7 ADD PUSH2 0x38A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x45D JUMPI PUSH2 0x45C PUSH2 0x6A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x46B DUP5 DUP3 DUP6 ADD PUSH2 0x39F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x47D DUP2 PUSH2 0x66D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x490 PUSH1 0x29 DUP4 PUSH2 0x65C JUMP JUMPDEST SWAP2 POP PUSH2 0x49B DUP3 PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B3 PUSH1 0x22 DUP4 PUSH2 0x65C JUMP JUMPDEST SWAP2 POP PUSH2 0x4BE DUP3 PUSH2 0x6FD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D6 PUSH1 0x11 DUP4 PUSH2 0x65C JUMP JUMPDEST SWAP2 POP PUSH2 0x4E1 DUP3 PUSH2 0x74C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F9 PUSH1 0x14 DUP4 PUSH2 0x65C JUMP JUMPDEST SWAP2 POP PUSH2 0x504 DUP3 PUSH2 0x775 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51C PUSH1 0x14 DUP4 PUSH2 0x65C JUMP JUMPDEST SWAP2 POP PUSH2 0x527 DUP3 PUSH2 0x79E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x53B DUP2 PUSH2 0x69F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x556 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x474 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x571 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x474 JUMP JUMPDEST PUSH2 0x57E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x474 JUMP JUMPDEST PUSH2 0x58B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x532 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5A8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x474 JUMP JUMPDEST PUSH2 0x5B5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x532 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5D5 DUP2 PUSH2 0x483 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5F5 DUP2 PUSH2 0x4A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x615 DUP2 PUSH2 0x4C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x635 DUP2 PUSH2 0x4EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x655 DUP2 PUSH2 0x50F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x678 DUP3 PUSH2 0x67F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x43616E6E6F742070657266726F6D207468697320616374696F6E206F6E207361 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D6520746F6B656E730000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x576520646F6E2774206861766520656E6F75676820666F722074686973207377 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6170000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6465706F73697420636F6D706C65746564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x7769746864726177616C20636F6D706C65746564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5769746864726177616C20436F6D706C65746564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x7D0 DUP2 PUSH2 0x66D JUMP JUMPDEST DUP2 EQ PUSH2 0x7DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x7E7 DUP2 PUSH2 0x69F JUMP JUMPDEST DUP2 EQ PUSH2 0x7F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xE7 SHL JUMP DIV 0xBB 0x2F 0x27 0x24 PUSH4 0xE37FC2C 0xAD LOG4 SLOAD 0xA6 RETURNDATASIZE 0xBC 0xF7 XOR GASLIMIT 0xF8 0xC7 0x4D 0x2E 0xDC RETURN LOG1 MSIZE NOT PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "979:870:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@deposit_110": {
									"entryPoint": 154,
									"id": 110,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@exchange_181": {
									"entryPoint": 488,
									"id": 181,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@withdrawal_131": {
									"entryPoint": 322,
									"id": 131,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0fce19fda0b55d82196faec75d47f152df53879a0deae83f860d145614bc6c6b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1155,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_466947e3cb62bbcdf7efd5b5905101328c5d7bf4e9ecd70e796fecb53c764163_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5d45a008227df390341187ada612f6ac6b99cb49cf9874ff10cd14191c4479ff_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8a35a10b44ba1b516bbe3f69ca378c9a77b3e4f5cac34c0b5b70d8f25c2df4f8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a4dae7bf733d5447bddea2526dfe4532d4379e58c407b7103c66818f22b1dc89_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1345,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1372,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1427,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0fce19fda0b55d82196faec75d47f152df53879a0deae83f860d145614bc6c6b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_466947e3cb62bbcdf7efd5b5905101328c5d7bf4e9ecd70e796fecb53c764163__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5d45a008227df390341187ada612f6ac6b99cb49cf9874ff10cd14191c4479ff__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8a35a10b44ba1b516bbe3f69ca378c9a77b3e4f5cac34c0b5b70d8f25c2df4f8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a4dae7bf733d5447bddea2526dfe4532d4379e58c407b7103c66818f22b1dc89__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1695,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1705,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0fce19fda0b55d82196faec75d47f152df53879a0deae83f860d145614bc6c6b": {
									"entryPoint": 1710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_466947e3cb62bbcdf7efd5b5905101328c5d7bf4e9ecd70e796fecb53c764163": {
									"entryPoint": 1789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5d45a008227df390341187ada612f6ac6b99cb49cf9874ff10cd14191c4479ff": {
									"entryPoint": 1868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8a35a10b44ba1b516bbe3f69ca378c9a77b3e4f5cac34c0b5b70d8f25c2df4f8": {
									"entryPoint": 1909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a4dae7bf733d5447bddea2526dfe4532d4379e58c407b7103c66818f22b1dc89": {
									"entryPoint": 1950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9213:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:6",
														"type": ""
													}
												],
												"src": "7:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:6",
														"type": ""
													}
												],
												"src": "152:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "360:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "370:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "385:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "379:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "379:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "370:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "428:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "401:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "401:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "401:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "338:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "346:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "354:5:6",
														"type": ""
													}
												],
												"src": "297:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:519:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "592:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "594:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "594:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "594:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "567:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "576:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "563:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "563:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "588:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "559:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "559:32:6"
															},
															"nodeType": "YulIf",
															"src": "556:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "685:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "700:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "714:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "704:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "729:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "764:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "775:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "760:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "760:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "784:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "739:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "739:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "729:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "812:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "827:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "841:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "831:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "857:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "892:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "903:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "888:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "888:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "912:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "867:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "867:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "857:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "940:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "955:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "969:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "959:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "985:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1020:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1031:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1016:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1016:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1040:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "995:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "995:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "985:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "500:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "511:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "523:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "531:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "539:6:6",
														"type": ""
													}
												],
												"src": "446:619:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1154:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1200:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1202:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1202:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1175:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1184:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1171:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1171:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1196:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1167:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1167:32:6"
															},
															"nodeType": "YulIf",
															"src": "1164:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1293:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1308:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1322:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1312:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1337:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1372:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1383:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1368:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1368:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1392:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1347:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1347:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1337:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1420:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1435:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1449:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1439:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1465:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1500:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1511:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1496:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1496:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1520:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1475:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1475:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1465:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1116:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1127:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1139:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1147:6:6",
														"type": ""
													}
												],
												"src": "1071:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1628:274:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1674:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1676:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1676:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1676:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1649:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1658:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1645:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1645:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1670:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1641:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1641:32:6"
															},
															"nodeType": "YulIf",
															"src": "1638:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1767:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1782:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1796:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1786:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1811:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1857:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1868:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1853:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1853:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1877:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1821:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1821:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1811:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1598:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1609:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1621:6:6",
														"type": ""
													}
												],
												"src": "1551:351:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1973:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1990:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2013:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1995:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1995:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1983:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1983:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1961:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1968:3:6",
														"type": ""
													}
												],
												"src": "1908:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2178:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2188:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2254:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2259:2:6",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2195:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2195:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2188:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2360:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0fce19fda0b55d82196faec75d47f152df53879a0deae83f860d145614bc6c6b",
																	"nodeType": "YulIdentifier",
																	"src": "2271:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2271:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2271:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2373:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2384:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2389:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2380:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2380:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2373:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0fce19fda0b55d82196faec75d47f152df53879a0deae83f860d145614bc6c6b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2166:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2174:3:6",
														"type": ""
													}
												],
												"src": "2032:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2550:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2560:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2626:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2631:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2567:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2567:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2560:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2732:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_466947e3cb62bbcdf7efd5b5905101328c5d7bf4e9ecd70e796fecb53c764163",
																	"nodeType": "YulIdentifier",
																	"src": "2643:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2643:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2643:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2745:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2756:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2761:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2752:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2752:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2745:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_466947e3cb62bbcdf7efd5b5905101328c5d7bf4e9ecd70e796fecb53c764163_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2538:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2546:3:6",
														"type": ""
													}
												],
												"src": "2404:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2922:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2932:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2998:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3003:2:6",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2939:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2939:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2932:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3104:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5d45a008227df390341187ada612f6ac6b99cb49cf9874ff10cd14191c4479ff",
																	"nodeType": "YulIdentifier",
																	"src": "3015:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3015:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3015:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3117:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3128:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3133:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3124:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3124:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5d45a008227df390341187ada612f6ac6b99cb49cf9874ff10cd14191c4479ff_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2910:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2918:3:6",
														"type": ""
													}
												],
												"src": "2776:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3294:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3304:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3370:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3375:2:6",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3311:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3311:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3304:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3476:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8a35a10b44ba1b516bbe3f69ca378c9a77b3e4f5cac34c0b5b70d8f25c2df4f8",
																	"nodeType": "YulIdentifier",
																	"src": "3387:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3387:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3387:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3489:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3500:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3505:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3496:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3496:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3489:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8a35a10b44ba1b516bbe3f69ca378c9a77b3e4f5cac34c0b5b70d8f25c2df4f8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3282:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3290:3:6",
														"type": ""
													}
												],
												"src": "3148:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3666:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3676:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3742:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3747:2:6",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3683:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3683:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3676:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3848:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a4dae7bf733d5447bddea2526dfe4532d4379e58c407b7103c66818f22b1dc89",
																	"nodeType": "YulIdentifier",
																	"src": "3759:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3759:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3759:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3861:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3872:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3877:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3868:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3868:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3861:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a4dae7bf733d5447bddea2526dfe4532d4379e58c407b7103c66818f22b1dc89_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3654:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3662:3:6",
														"type": ""
													}
												],
												"src": "3520:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3957:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3974:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3997:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3979:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3979:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3967:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3967:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3967:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3945:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3952:3:6",
														"type": ""
													}
												],
												"src": "3892:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4114:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4124:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4136:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4147:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4132:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4132:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4124:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4204:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4217:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4228:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4213:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4213:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4160:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4160:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4160:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4086:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4098:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4109:4:6",
														"type": ""
													}
												],
												"src": "4016:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4398:288:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4408:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4420:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4431:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4416:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4416:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4408:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4488:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4501:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4512:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4497:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4497:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4444:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4444:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4444:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4569:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4582:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4593:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4578:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4578:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4525:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4525:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4525:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4651:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4664:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4675:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4660:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4660:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4607:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4607:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4607:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4354:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4366:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4374:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4382:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4393:4:6",
														"type": ""
													}
												],
												"src": "4244:442:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4818:206:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4828:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4840:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4851:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4836:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4836:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4828:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4908:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4921:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4932:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4917:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4917:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4864:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4864:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4864:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4989:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5002:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5013:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4998:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4998:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4945:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4945:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4945:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4782:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4794:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4802:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4813:4:6",
														"type": ""
													}
												],
												"src": "4692:332:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5201:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5211:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5223:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5234:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5219:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5219:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5211:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5258:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5269:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5254:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5254:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5277:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5283:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5273:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5273:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5247:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5247:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5247:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5303:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5437:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0fce19fda0b55d82196faec75d47f152df53879a0deae83f860d145614bc6c6b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5311:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5311:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5303:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0fce19fda0b55d82196faec75d47f152df53879a0deae83f860d145614bc6c6b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5181:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5196:4:6",
														"type": ""
													}
												],
												"src": "5030:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5626:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5636:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5648:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5659:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5644:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5644:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5636:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5683:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5694:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5679:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5679:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5702:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5708:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5698:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5698:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5672:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5672:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5672:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5728:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5862:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_466947e3cb62bbcdf7efd5b5905101328c5d7bf4e9ecd70e796fecb53c764163_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5736:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5736:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5728:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_466947e3cb62bbcdf7efd5b5905101328c5d7bf4e9ecd70e796fecb53c764163__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5606:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5621:4:6",
														"type": ""
													}
												],
												"src": "5455:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6051:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6061:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6073:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6084:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6069:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6069:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6061:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6108:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6119:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6104:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6104:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6127:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6133:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6123:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6123:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6097:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6097:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6097:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6153:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6287:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5d45a008227df390341187ada612f6ac6b99cb49cf9874ff10cd14191c4479ff_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6161:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6161:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6153:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5d45a008227df390341187ada612f6ac6b99cb49cf9874ff10cd14191c4479ff__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6031:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6046:4:6",
														"type": ""
													}
												],
												"src": "5880:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6476:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6486:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6498:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6509:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6494:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6494:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6486:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6533:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6544:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6529:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6529:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6552:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6558:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6548:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6548:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6522:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6522:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6522:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6578:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6712:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8a35a10b44ba1b516bbe3f69ca378c9a77b3e4f5cac34c0b5b70d8f25c2df4f8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6586:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6586:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6578:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8a35a10b44ba1b516bbe3f69ca378c9a77b3e4f5cac34c0b5b70d8f25c2df4f8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6456:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6471:4:6",
														"type": ""
													}
												],
												"src": "6305:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6901:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6911:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6923:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6934:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6919:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6919:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6911:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6958:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6969:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6954:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6954:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6977:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6983:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6973:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6973:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6947:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6947:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6947:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7003:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7137:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a4dae7bf733d5447bddea2526dfe4532d4379e58c407b7103c66818f22b1dc89_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7011:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7011:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7003:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a4dae7bf733d5447bddea2526dfe4532d4379e58c407b7103c66818f22b1dc89__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6881:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6896:4:6",
														"type": ""
													}
												],
												"src": "6730:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7195:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7205:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7221:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7215:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7215:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7205:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7188:6:6",
														"type": ""
													}
												],
												"src": "7155:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7332:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7349:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7354:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7342:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7370:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7389:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7394:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7385:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7385:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7370:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7304:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7309:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7320:11:6",
														"type": ""
													}
												],
												"src": "7236:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7456:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7466:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7495:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "7477:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7477:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7466:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7438:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7448:7:6",
														"type": ""
													}
												],
												"src": "7411:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7558:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7568:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7583:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7590:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7579:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7579:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7568:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7540:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7550:7:6",
														"type": ""
													}
												],
												"src": "7513:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7690:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7700:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7711:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7700:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7672:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7682:7:6",
														"type": ""
													}
												],
												"src": "7645:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7817:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7834:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7837:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7827:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7827:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7827:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "7728:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7940:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7957:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7960:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7950:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7950:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7950:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "7851:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8080:122:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8102:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8110:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8098:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8098:14:6"
																	},
																	{
																		"hexValue": "43616e6e6f742070657266726f6d207468697320616374696f6e206f6e207361",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8114:34:6",
																		"type": "",
																		"value": "Cannot perfrom this action on sa"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8091:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8091:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8091:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8170:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8178:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8166:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8166:15:6"
																	},
																	{
																		"hexValue": "6d6520746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8183:11:6",
																		"type": "",
																		"value": "me tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8159:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8159:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8159:36:6"
														}
													]
												},
												"name": "store_literal_in_memory_0fce19fda0b55d82196faec75d47f152df53879a0deae83f860d145614bc6c6b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8072:6:6",
														"type": ""
													}
												],
												"src": "7974:228:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8314:115:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8336:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8344:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8332:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8332:14:6"
																	},
																	{
																		"hexValue": "576520646f6e2774206861766520656e6f75676820666f722074686973207377",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8348:34:6",
																		"type": "",
																		"value": "We don't have enough for this sw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8325:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8325:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8325:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8404:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8412:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8400:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8400:15:6"
																	},
																	{
																		"hexValue": "6170",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8417:4:6",
																		"type": "",
																		"value": "ap"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8393:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8393:29:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8393:29:6"
														}
													]
												},
												"name": "store_literal_in_memory_466947e3cb62bbcdf7efd5b5905101328c5d7bf4e9ecd70e796fecb53c764163",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8306:6:6",
														"type": ""
													}
												],
												"src": "8208:221:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8541:61:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8563:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8571:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8559:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8559:14:6"
																	},
																	{
																		"hexValue": "6465706f73697420636f6d706c65746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8575:19:6",
																		"type": "",
																		"value": "deposit completed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8552:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8552:43:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8552:43:6"
														}
													]
												},
												"name": "store_literal_in_memory_5d45a008227df390341187ada612f6ac6b99cb49cf9874ff10cd14191c4479ff",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8533:6:6",
														"type": ""
													}
												],
												"src": "8435:167:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8714:64:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8736:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8744:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8732:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8732:14:6"
																	},
																	{
																		"hexValue": "7769746864726177616c20636f6d706c65746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8748:22:6",
																		"type": "",
																		"value": "withdrawal completed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8725:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8725:46:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8725:46:6"
														}
													]
												},
												"name": "store_literal_in_memory_8a35a10b44ba1b516bbe3f69ca378c9a77b3e4f5cac34c0b5b70d8f25c2df4f8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8706:6:6",
														"type": ""
													}
												],
												"src": "8608:170:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8890:64:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8912:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8920:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8908:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8908:14:6"
																	},
																	{
																		"hexValue": "5769746864726177616c20436f6d706c65746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8924:22:6",
																		"type": "",
																		"value": "Withdrawal Completed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8901:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8901:46:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8901:46:6"
														}
													]
												},
												"name": "store_literal_in_memory_a4dae7bf733d5447bddea2526dfe4532d4379e58c407b7103c66818f22b1dc89",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8882:6:6",
														"type": ""
													}
												],
												"src": "8784:170:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9003:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9060:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9069:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9072:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9062:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9062:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9062:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9026:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9051:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "9033:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9033:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9023:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9023:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9016:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9016:43:6"
															},
															"nodeType": "YulIf",
															"src": "9013:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8996:5:6",
														"type": ""
													}
												],
												"src": "8960:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9131:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9188:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9197:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9200:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9190:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9190:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9190:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9154:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9179:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "9161:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9161:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9151:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9151:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9144:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9144:43:6"
															},
															"nodeType": "YulIf",
															"src": "9141:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9124:5:6",
														"type": ""
													}
												],
												"src": "9088:122:6"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_0fce19fda0b55d82196faec75d47f152df53879a0deae83f860d145614bc6c6b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_0fce19fda0b55d82196faec75d47f152df53879a0deae83f860d145614bc6c6b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_466947e3cb62bbcdf7efd5b5905101328c5d7bf4e9ecd70e796fecb53c764163_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_466947e3cb62bbcdf7efd5b5905101328c5d7bf4e9ecd70e796fecb53c764163(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_5d45a008227df390341187ada612f6ac6b99cb49cf9874ff10cd14191c4479ff_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_5d45a008227df390341187ada612f6ac6b99cb49cf9874ff10cd14191c4479ff(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_8a35a10b44ba1b516bbe3f69ca378c9a77b3e4f5cac34c0b5b70d8f25c2df4f8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_8a35a10b44ba1b516bbe3f69ca378c9a77b3e4f5cac34c0b5b70d8f25c2df4f8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_a4dae7bf733d5447bddea2526dfe4532d4379e58c407b7103c66818f22b1dc89_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_a4dae7bf733d5447bddea2526dfe4532d4379e58c407b7103c66818f22b1dc89(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0fce19fda0b55d82196faec75d47f152df53879a0deae83f860d145614bc6c6b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0fce19fda0b55d82196faec75d47f152df53879a0deae83f860d145614bc6c6b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_466947e3cb62bbcdf7efd5b5905101328c5d7bf4e9ecd70e796fecb53c764163__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_466947e3cb62bbcdf7efd5b5905101328c5d7bf4e9ecd70e796fecb53c764163_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5d45a008227df390341187ada612f6ac6b99cb49cf9874ff10cd14191c4479ff__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5d45a008227df390341187ada612f6ac6b99cb49cf9874ff10cd14191c4479ff_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a35a10b44ba1b516bbe3f69ca378c9a77b3e4f5cac34c0b5b70d8f25c2df4f8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a35a10b44ba1b516bbe3f69ca378c9a77b3e4f5cac34c0b5b70d8f25c2df4f8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a4dae7bf733d5447bddea2526dfe4532d4379e58c407b7103c66818f22b1dc89__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a4dae7bf733d5447bddea2526dfe4532d4379e58c407b7103c66818f22b1dc89_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_0fce19fda0b55d82196faec75d47f152df53879a0deae83f860d145614bc6c6b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot perfrom this action on sa\")\n\n        mstore(add(memPtr, 32), \"me tokens\")\n\n    }\n\n    function store_literal_in_memory_466947e3cb62bbcdf7efd5b5905101328c5d7bf4e9ecd70e796fecb53c764163(memPtr) {\n\n        mstore(add(memPtr, 0), \"We don't have enough for this sw\")\n\n        mstore(add(memPtr, 32), \"ap\")\n\n    }\n\n    function store_literal_in_memory_5d45a008227df390341187ada612f6ac6b99cb49cf9874ff10cd14191c4479ff(memPtr) {\n\n        mstore(add(memPtr, 0), \"deposit completed\")\n\n    }\n\n    function store_literal_in_memory_8a35a10b44ba1b516bbe3f69ca378c9a77b3e4f5cac34c0b5b70d8f25c2df4f8(memPtr) {\n\n        mstore(add(memPtr, 0), \"withdrawal completed\")\n\n    }\n\n    function store_literal_in_memory_a4dae7bf733d5447bddea2526dfe4532d4379e58c407b7103c66818f22b1dc89(memPtr) {\n\n        mstore(add(memPtr, 0), \"Withdrawal Completed\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806347e7ef24146100465780635a6b26ba14610062578063969e37561461007e575b600080fd5b610060600480360381019061005b9190610407565b61009a565b005b61007c60048036038101906100779190610407565b610142565b005b610098600480360381019061009391906103b4565b6101e8565b005b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016100d79392919061055c565b600060405180830381600087803b1580156100f157600080fd5b505af1158015610105573d6000803e3d6000fd5b505050507f80dfa405646e0f90c813e8ee74f4f5f0a573809b1cb830e95cd1ebcbea04ccdc604051610136906105fc565b60405180910390a15050565b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161017d929190610593565b600060405180830381600087803b15801561019757600080fd5b505af11580156101ab573d6000803e3d6000fd5b505050507f80dfa405646e0f90c813e8ee74f4f5f0a573809b1cb830e95cd1ebcbea04ccdc6040516101dc9061063c565b60405180910390a15050565b60008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102239190610541565b60206040518083038186803b15801561023b57600080fd5b505afa15801561024f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102739190610447565b90508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156102e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102db906105bc565b60405180910390fd5b818111610326576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031d906105dc565b60405180910390fd5b610330848361009a565b61033a8383610142565b7f80dfa405646e0f90c813e8ee74f4f5f0a573809b1cb830e95cd1ebcbea04ccdc6040516103679061061c565b60405180910390a150505050565b600081359050610384816107c7565b92915050565b600081359050610399816107de565b92915050565b6000815190506103ae816107de565b92915050565b6000806000606084860312156103cd576103cc6106a9565b5b60006103db86828701610375565b93505060206103ec86828701610375565b92505060406103fd8682870161038a565b9150509250925092565b6000806040838503121561041e5761041d6106a9565b5b600061042c85828601610375565b925050602061043d8582860161038a565b9150509250929050565b60006020828403121561045d5761045c6106a9565b5b600061046b8482850161039f565b91505092915050565b61047d8161066d565b82525050565b600061049060298361065c565b915061049b826106ae565b604082019050919050565b60006104b360228361065c565b91506104be826106fd565b604082019050919050565b60006104d660118361065c565b91506104e18261074c565b602082019050919050565b60006104f960148361065c565b915061050482610775565b602082019050919050565b600061051c60148361065c565b91506105278261079e565b602082019050919050565b61053b8161069f565b82525050565b60006020820190506105566000830184610474565b92915050565b60006060820190506105716000830186610474565b61057e6020830185610474565b61058b6040830184610532565b949350505050565b60006040820190506105a86000830185610474565b6105b56020830184610532565b9392505050565b600060208201905081810360008301526105d581610483565b9050919050565b600060208201905081810360008301526105f5816104a6565b9050919050565b60006020820190508181036000830152610615816104c9565b9050919050565b60006020820190508181036000830152610635816104ec565b9050919050565b600060208201905081810360008301526106558161050f565b9050919050565b600082825260208201905092915050565b60006106788261067f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b7f43616e6e6f742070657266726f6d207468697320616374696f6e206f6e20736160008201527f6d6520746f6b656e730000000000000000000000000000000000000000000000602082015250565b7f576520646f6e2774206861766520656e6f75676820666f72207468697320737760008201527f6170000000000000000000000000000000000000000000000000000000000000602082015250565b7f6465706f73697420636f6d706c65746564000000000000000000000000000000600082015250565b7f7769746864726177616c20636f6d706c65746564000000000000000000000000600082015250565b7f5769746864726177616c20436f6d706c65746564000000000000000000000000600082015250565b6107d08161066d565b81146107db57600080fd5b50565b6107e78161069f565b81146107f257600080fd5b5056fea26469706673582212200ce71b5604bb2f2724630e37fc2cada454a63dbcf71845f8c74d2edcf3a1591964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x5A6B26BA EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0x969E3756 EQ PUSH2 0x7E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x407 JUMP JUMPDEST PUSH2 0x9A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x77 SWAP2 SWAP1 PUSH2 0x407 JUMP JUMPDEST PUSH2 0x142 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x98 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x3B4 JUMP JUMPDEST PUSH2 0x1E8 JUMP JUMPDEST STOP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x55C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x105 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x80DFA405646E0F90C813E8EE74F4F5F0A573809B1CB830E95CD1EBCBEA04CCDC PUSH1 0x40 MLOAD PUSH2 0x136 SWAP1 PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D SWAP3 SWAP2 SWAP1 PUSH2 0x593 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x80DFA405646E0F90C813E8EE74F4F5F0A573809B1CB830E95CD1EBCBEA04CCDC PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP1 PUSH2 0x63C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x541 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x447 JUMP JUMPDEST SWAP1 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DB SWAP1 PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 GT PUSH2 0x326 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31D SWAP1 PUSH2 0x5DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x330 DUP5 DUP4 PUSH2 0x9A JUMP JUMPDEST PUSH2 0x33A DUP4 DUP4 PUSH2 0x142 JUMP JUMPDEST PUSH32 0x80DFA405646E0F90C813E8EE74F4F5F0A573809B1CB830E95CD1EBCBEA04CCDC PUSH1 0x40 MLOAD PUSH2 0x367 SWAP1 PUSH2 0x61C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x384 DUP2 PUSH2 0x7C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x399 DUP2 PUSH2 0x7DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3AE DUP2 PUSH2 0x7DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3CD JUMPI PUSH2 0x3CC PUSH2 0x6A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3DB DUP7 DUP3 DUP8 ADD PUSH2 0x375 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3EC DUP7 DUP3 DUP8 ADD PUSH2 0x375 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3FD DUP7 DUP3 DUP8 ADD PUSH2 0x38A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x41E JUMPI PUSH2 0x41D PUSH2 0x6A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x42C DUP6 DUP3 DUP7 ADD PUSH2 0x375 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x43D DUP6 DUP3 DUP7 ADD PUSH2 0x38A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x45D JUMPI PUSH2 0x45C PUSH2 0x6A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x46B DUP5 DUP3 DUP6 ADD PUSH2 0x39F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x47D DUP2 PUSH2 0x66D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x490 PUSH1 0x29 DUP4 PUSH2 0x65C JUMP JUMPDEST SWAP2 POP PUSH2 0x49B DUP3 PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B3 PUSH1 0x22 DUP4 PUSH2 0x65C JUMP JUMPDEST SWAP2 POP PUSH2 0x4BE DUP3 PUSH2 0x6FD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D6 PUSH1 0x11 DUP4 PUSH2 0x65C JUMP JUMPDEST SWAP2 POP PUSH2 0x4E1 DUP3 PUSH2 0x74C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F9 PUSH1 0x14 DUP4 PUSH2 0x65C JUMP JUMPDEST SWAP2 POP PUSH2 0x504 DUP3 PUSH2 0x775 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51C PUSH1 0x14 DUP4 PUSH2 0x65C JUMP JUMPDEST SWAP2 POP PUSH2 0x527 DUP3 PUSH2 0x79E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x53B DUP2 PUSH2 0x69F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x556 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x474 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x571 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x474 JUMP JUMPDEST PUSH2 0x57E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x474 JUMP JUMPDEST PUSH2 0x58B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x532 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5A8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x474 JUMP JUMPDEST PUSH2 0x5B5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x532 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5D5 DUP2 PUSH2 0x483 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5F5 DUP2 PUSH2 0x4A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x615 DUP2 PUSH2 0x4C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x635 DUP2 PUSH2 0x4EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x655 DUP2 PUSH2 0x50F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x678 DUP3 PUSH2 0x67F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x43616E6E6F742070657266726F6D207468697320616374696F6E206F6E207361 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D6520746F6B656E730000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x576520646F6E2774206861766520656E6F75676820666F722074686973207377 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6170000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6465706F73697420636F6D706C65746564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x7769746864726177616C20636F6D706C65746564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5769746864726177616C20436F6D706C65746564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x7D0 DUP2 PUSH2 0x66D JUMP JUMPDEST DUP2 EQ PUSH2 0x7DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x7E7 DUP2 PUSH2 0x69F JUMP JUMPDEST DUP2 EQ PUSH2 0x7F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xE7 SHL JUMP DIV 0xBB 0x2F 0x27 0x24 PUSH4 0xE37FC2C 0xAD LOG4 SLOAD 0xA6 RETURNDATASIZE 0xBC 0xF7 XOR GASLIMIT 0xF8 0xC7 0x4D 0x2E 0xDC RETURN LOG1 MSIZE NOT PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "979:870:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1096:172;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1275:159;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1440:405;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1096:172;1163:5;1157:25;;;1183:10;1203:4;1210:6;1157:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1233:28;;;;;;:::i;:::-;;;;;;;;1096:172;;:::o;1275:159::-;1345:5;1339:21;;;1361:10;1373:6;1339:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:31;;;;;;:::i;:::-;;;;;;;;1275:159;;:::o;1440:405::-;1513:17;1539:2;1533:19;;;1561:4;1533:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1513:54;;1602:2;1594:10;;:4;:10;;;;1586:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1682:6;1668:12;:20;1660:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1738:21;1746:4;1752:6;1738:7;:21::i;:::-;1769:22;1780:2;1784:6;1769:10;:22::i;:::-;1807:31;;;;;;:::i;:::-;;;;;;;;1503:342;1440:405;;;:::o;7:139:6:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:143::-;354:5;385:6;379:13;370:22;;401:33;428:5;401:33;:::i;:::-;297:143;;;;:::o;446:619::-;523:6;531;539;588:2;576:9;567:7;563:23;559:32;556:119;;;594:79;;:::i;:::-;556:119;714:1;739:53;784:7;775:6;764:9;760:22;739:53;:::i;:::-;729:63;;685:117;841:2;867:53;912:7;903:6;892:9;888:22;867:53;:::i;:::-;857:63;;812:118;969:2;995:53;1040:7;1031:6;1020:9;1016:22;995:53;:::i;:::-;985:63;;940:118;446:619;;;;;:::o;1071:474::-;1139:6;1147;1196:2;1184:9;1175:7;1171:23;1167:32;1164:119;;;1202:79;;:::i;:::-;1164:119;1322:1;1347:53;1392:7;1383:6;1372:9;1368:22;1347:53;:::i;:::-;1337:63;;1293:117;1449:2;1475:53;1520:7;1511:6;1500:9;1496:22;1475:53;:::i;:::-;1465:63;;1420:118;1071:474;;;;;:::o;1551:351::-;1621:6;1670:2;1658:9;1649:7;1645:23;1641:32;1638:119;;;1676:79;;:::i;:::-;1638:119;1796:1;1821:64;1877:7;1868:6;1857:9;1853:22;1821:64;:::i;:::-;1811:74;;1767:128;1551:351;;;;:::o;1908:118::-;1995:24;2013:5;1995:24;:::i;:::-;1990:3;1983:37;1908:118;;:::o;2032:366::-;2174:3;2195:67;2259:2;2254:3;2195:67;:::i;:::-;2188:74;;2271:93;2360:3;2271:93;:::i;:::-;2389:2;2384:3;2380:12;2373:19;;2032:366;;;:::o;2404:::-;2546:3;2567:67;2631:2;2626:3;2567:67;:::i;:::-;2560:74;;2643:93;2732:3;2643:93;:::i;:::-;2761:2;2756:3;2752:12;2745:19;;2404:366;;;:::o;2776:::-;2918:3;2939:67;3003:2;2998:3;2939:67;:::i;:::-;2932:74;;3015:93;3104:3;3015:93;:::i;:::-;3133:2;3128:3;3124:12;3117:19;;2776:366;;;:::o;3148:::-;3290:3;3311:67;3375:2;3370:3;3311:67;:::i;:::-;3304:74;;3387:93;3476:3;3387:93;:::i;:::-;3505:2;3500:3;3496:12;3489:19;;3148:366;;;:::o;3520:::-;3662:3;3683:67;3747:2;3742:3;3683:67;:::i;:::-;3676:74;;3759:93;3848:3;3759:93;:::i;:::-;3877:2;3872:3;3868:12;3861:19;;3520:366;;;:::o;3892:118::-;3979:24;3997:5;3979:24;:::i;:::-;3974:3;3967:37;3892:118;;:::o;4016:222::-;4109:4;4147:2;4136:9;4132:18;4124:26;;4160:71;4228:1;4217:9;4213:17;4204:6;4160:71;:::i;:::-;4016:222;;;;:::o;4244:442::-;4393:4;4431:2;4420:9;4416:18;4408:26;;4444:71;4512:1;4501:9;4497:17;4488:6;4444:71;:::i;:::-;4525:72;4593:2;4582:9;4578:18;4569:6;4525:72;:::i;:::-;4607;4675:2;4664:9;4660:18;4651:6;4607:72;:::i;:::-;4244:442;;;;;;:::o;4692:332::-;4813:4;4851:2;4840:9;4836:18;4828:26;;4864:71;4932:1;4921:9;4917:17;4908:6;4864:71;:::i;:::-;4945:72;5013:2;5002:9;4998:18;4989:6;4945:72;:::i;:::-;4692:332;;;;;:::o;5030:419::-;5196:4;5234:2;5223:9;5219:18;5211:26;;5283:9;5277:4;5273:20;5269:1;5258:9;5254:17;5247:47;5311:131;5437:4;5311:131;:::i;:::-;5303:139;;5030:419;;;:::o;5455:::-;5621:4;5659:2;5648:9;5644:18;5636:26;;5708:9;5702:4;5698:20;5694:1;5683:9;5679:17;5672:47;5736:131;5862:4;5736:131;:::i;:::-;5728:139;;5455:419;;;:::o;5880:::-;6046:4;6084:2;6073:9;6069:18;6061:26;;6133:9;6127:4;6123:20;6119:1;6108:9;6104:17;6097:47;6161:131;6287:4;6161:131;:::i;:::-;6153:139;;5880:419;;;:::o;6305:::-;6471:4;6509:2;6498:9;6494:18;6486:26;;6558:9;6552:4;6548:20;6544:1;6533:9;6529:17;6522:47;6586:131;6712:4;6586:131;:::i;:::-;6578:139;;6305:419;;;:::o;6730:::-;6896:4;6934:2;6923:9;6919:18;6911:26;;6983:9;6977:4;6973:20;6969:1;6958:9;6954:17;6947:47;7011:131;7137:4;7011:131;:::i;:::-;7003:139;;6730:419;;;:::o;7236:169::-;7320:11;7354:6;7349:3;7342:19;7394:4;7389:3;7385:14;7370:29;;7236:169;;;;:::o;7411:96::-;7448:7;7477:24;7495:5;7477:24;:::i;:::-;7466:35;;7411:96;;;:::o;7513:126::-;7550:7;7590:42;7583:5;7579:54;7568:65;;7513:126;;;:::o;7645:77::-;7682:7;7711:5;7700:16;;7645:77;;;:::o;7851:117::-;7960:1;7957;7950:12;7974:228;8114:34;8110:1;8102:6;8098:14;8091:58;8183:11;8178:2;8170:6;8166:15;8159:36;7974:228;:::o;8208:221::-;8348:34;8344:1;8336:6;8332:14;8325:58;8417:4;8412:2;8404:6;8400:15;8393:29;8208:221;:::o;8435:167::-;8575:19;8571:1;8563:6;8559:14;8552:43;8435:167;:::o;8608:170::-;8748:22;8744:1;8736:6;8732:14;8725:46;8608:170;:::o;8784:::-;8924:22;8920:1;8912:6;8908:14;8901:46;8784:170;:::o;8960:122::-;9033:24;9051:5;9033:24;:::i;:::-;9026:5;9023:35;9013:63;;9072:1;9069;9062:12;9013:63;8960:122;:::o;9088:::-;9161:24;9179:5;9161:24;:::i;:::-;9154:5;9151:35;9141:63;;9200:1;9197;9190:12;9141:63;9088:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "418200",
								"executionCost": "455",
								"totalCost": "418655"
							},
							"external": {
								"deposit(address,uint256)": "infinite",
								"exchange(address,address,uint256)": "infinite",
								"withdrawal(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 979,
									"end": 1849,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 979,
									"end": 1849,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 979,
									"end": 1849,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 979,
									"end": 1849,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 979,
									"end": 1849,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 979,
									"end": 1849,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 979,
									"end": 1849,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 979,
									"end": 1849,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 979,
									"end": 1849,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 979,
									"end": 1849,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 979,
									"end": 1849,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 979,
									"end": 1849,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 979,
									"end": 1849,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 979,
									"end": 1849,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 979,
									"end": 1849,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 979,
									"end": 1849,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 979,
									"end": 1849,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 979,
									"end": 1849,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 979,
									"end": 1849,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 979,
									"end": 1849,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 979,
									"end": 1849,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200ce71b5604bb2f2724630e37fc2cada454a63dbcf71845f8c74d2edcf3a1591964736f6c63430008070033",
									".code": [
										{
											"begin": 979,
											"end": 1849,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "PUSH",
											"source": 0,
											"value": "47E7EF24"
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "PUSH",
											"source": 0,
											"value": "5A6B26BA"
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "PUSH",
											"source": 0,
											"value": "969E3756"
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1849,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1268,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1096,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1096,
											"end": 1268,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1096,
											"end": 1268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1268,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1268,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1096,
											"end": 1268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1096,
											"end": 1268,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1096,
											"end": 1268,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1096,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1096,
											"end": 1268,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1096,
											"end": 1268,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1096,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1268,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1434,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1275,
											"end": 1434,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1434,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1434,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1434,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1434,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1434,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1275,
											"end": 1434,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1275,
											"end": 1434,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1434,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1275,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1275,
											"end": 1434,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1434,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1275,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1434,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1440,
											"end": 1845,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1440,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1440,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1440,
											"end": 1845,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1440,
											"end": 1845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1440,
											"end": 1845,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1440,
											"end": 1845,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1440,
											"end": 1845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1440,
											"end": 1845,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1440,
											"end": 1845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1440,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1440,
											"end": 1845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1440,
											"end": 1845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1440,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1440,
											"end": 1845,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1440,
											"end": 1845,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1440,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1440,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1440,
											"end": 1845,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1440,
											"end": 1845,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1440,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1440,
											"end": 1845,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1268,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1096,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1163,
											"end": 1168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1182,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1157,
											"end": 1182,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1182,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1183,
											"end": 1193,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1203,
											"end": 1207,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1216,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1261,
											"name": "PUSH",
											"source": 0,
											"value": "80DFA405646E0F90C813E8EE74F4F5F0A573809B1CB830E95CD1EBCBEA04CCDC"
										},
										{
											"begin": 1233,
											"end": 1261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1261,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1233,
											"end": 1261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1233,
											"end": 1261,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1233,
											"end": 1261,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1233,
											"end": 1261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1261,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1261,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1261,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1261,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1268,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1275,
											"end": 1434,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1275,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1345,
											"end": 1350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1360,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1339,
											"end": 1360,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1360,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1361,
											"end": 1371,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1379,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "PUSH",
											"source": 0,
											"value": "80DFA405646E0F90C813E8EE74F4F5F0A573809B1CB830E95CD1EBCBEA04CCDC"
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1275,
											"end": 1434,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1440,
											"end": 1845,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1440,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1552,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1561,
											"end": 1565,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1604,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1604,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1604,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1598,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1604,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1604,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1604,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1604,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1586,
											"end": 1650,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1650,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1586,
											"end": 1650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1650,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1586,
											"end": 1650,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1586,
											"end": 1650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1586,
											"end": 1650,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1586,
											"end": 1650,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1586,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1650,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1650,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1650,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1650,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1650,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1650,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1586,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1682,
											"end": 1688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1688,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1660,
											"end": 1727,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1727,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1727,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1727,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1660,
											"end": 1727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1727,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1727,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1660,
											"end": 1727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1660,
											"end": 1727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1660,
											"end": 1727,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1660,
											"end": 1727,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1660,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1727,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1727,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1727,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1727,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1727,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1727,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1727,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1660,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1746,
											"end": 1750,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1752,
											"end": 1758,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1738,
											"end": 1759,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1738,
											"end": 1759,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1738,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1780,
											"end": 1782,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1784,
											"end": 1790,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1769,
											"end": 1791,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1769,
											"end": 1791,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1769,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1838,
											"name": "PUSH",
											"source": 0,
											"value": "80DFA405646E0F90C813E8EE74F4F5F0A573809B1CB830E95CD1EBCBEA04CCDC"
										},
										{
											"begin": 1807,
											"end": 1838,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1807,
											"end": 1838,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1807,
											"end": 1838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1807,
											"end": 1838,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1807,
											"end": 1838,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1807,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1838,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1807,
											"end": 1838,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1838,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1838,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1838,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1838,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 1503,
											"end": 1845,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1440,
											"end": 1845,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1440,
											"end": 1845,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1440,
											"end": 1845,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1440,
											"end": 1845,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 440,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 297,
											"end": 440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 354,
											"end": 359,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 391,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 379,
											"end": 392,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 370,
											"end": 392,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 370,
											"end": 392,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 428,
											"end": 433,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 297,
											"end": 440,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 297,
											"end": 440,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 297,
											"end": 440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 297,
											"end": 440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 297,
											"end": 440,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 446,
											"end": 1065,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 446,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 523,
											"end": 529,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 531,
											"end": 537,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 539,
											"end": 545,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 588,
											"end": 590,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 576,
											"end": 585,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 567,
											"end": 574,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 563,
											"end": 586,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 559,
											"end": 591,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 556,
											"end": 675,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 556,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 556,
											"end": 675,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 594,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 594,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 594,
											"end": 673,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 594,
											"end": 673,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 594,
											"end": 673,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 556,
											"end": 675,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 556,
											"end": 675,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 714,
											"end": 715,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 784,
											"end": 791,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 764,
											"end": 773,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 760,
											"end": 782,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 739,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 739,
											"end": 792,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 739,
											"end": 792,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 739,
											"end": 792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 729,
											"end": 792,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 729,
											"end": 792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 685,
											"end": 802,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 843,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 867,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 912,
											"end": 919,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 892,
											"end": 901,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 888,
											"end": 910,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 867,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 867,
											"end": 920,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 867,
											"end": 920,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 867,
											"end": 920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 857,
											"end": 920,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 857,
											"end": 920,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 812,
											"end": 930,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 969,
											"end": 971,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 995,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1040,
											"end": 1047,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1037,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1020,
											"end": 1029,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1038,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 995,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 995,
											"end": 1048,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 995,
											"end": 1048,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 995,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 985,
											"end": 1048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 985,
											"end": 1048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1058,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 446,
											"end": 1065,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 446,
											"end": 1065,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 446,
											"end": 1065,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 446,
											"end": 1065,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 446,
											"end": 1065,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 446,
											"end": 1065,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1071,
											"end": 1545,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1071,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 1153,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1196,
											"end": 1198,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1184,
											"end": 1193,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1175,
											"end": 1182,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1171,
											"end": 1194,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1199,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1164,
											"end": 1283,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1164,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1164,
											"end": 1283,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1202,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1202,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1202,
											"end": 1281,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1202,
											"end": 1281,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1202,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1164,
											"end": 1283,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1164,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1323,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1347,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1392,
											"end": 1399,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1372,
											"end": 1381,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1368,
											"end": 1390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1347,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1347,
											"end": 1400,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1347,
											"end": 1400,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1347,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1400,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1400,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1451,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1520,
											"end": 1527,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1517,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1509,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1496,
											"end": 1518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1528,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1528,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1420,
											"end": 1538,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1545,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1545,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1545,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1545,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1545,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1551,
											"end": 1902,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1551,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1621,
											"end": 1627,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1672,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1658,
											"end": 1667,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1656,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1668,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1641,
											"end": 1673,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1757,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1638,
											"end": 1757,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1755,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1676,
											"end": 1755,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1676,
											"end": 1755,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1676,
											"end": 1755,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1676,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1757,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1638,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1797,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1821,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1877,
											"end": 1884,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1868,
											"end": 1874,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1857,
											"end": 1866,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1853,
											"end": 1875,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1821,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1821,
											"end": 1885,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1821,
											"end": 1885,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1821,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1885,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1885,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1895,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1551,
											"end": 1902,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1551,
											"end": 1902,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1551,
											"end": 1902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1551,
											"end": 1902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1551,
											"end": 1902,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1908,
											"end": 2026,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1908,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1995,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 2013,
											"end": 2018,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1995,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1995,
											"end": 2019,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1995,
											"end": 2019,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1995,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 1993,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2020,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 2026,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 2026,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 2026,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2032,
											"end": 2398,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2032,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2177,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2259,
											"end": 2261,
											"name": "PUSH",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2254,
											"end": 2257,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2195,
											"end": 2262,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2195,
											"end": 2262,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2195,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2188,
											"end": 2262,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2188,
											"end": 2262,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2271,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2360,
											"end": 2363,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2271,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2271,
											"end": 2364,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2271,
											"end": 2364,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2271,
											"end": 2364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2389,
											"end": 2391,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2384,
											"end": 2387,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2380,
											"end": 2392,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2392,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2392,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2032,
											"end": 2398,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2032,
											"end": 2398,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2032,
											"end": 2398,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2032,
											"end": 2398,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2404,
											"end": 2770,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2404,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2546,
											"end": 2549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2631,
											"end": 2633,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2626,
											"end": 2629,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2567,
											"end": 2634,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2567,
											"end": 2634,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2567,
											"end": 2634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2634,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2732,
											"end": 2735,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2643,
											"end": 2736,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2643,
											"end": 2736,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2643,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2756,
											"end": 2759,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2764,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2764,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2404,
											"end": 2770,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2404,
											"end": 2770,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2404,
											"end": 2770,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2404,
											"end": 2770,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2776,
											"end": 3142,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2776,
											"end": 3142,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2918,
											"end": 2921,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2939,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 3003,
											"end": 3005,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2998,
											"end": 3001,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2939,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2939,
											"end": 3006,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2939,
											"end": 3006,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2939,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3006,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3015,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3104,
											"end": 3107,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3015,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3015,
											"end": 3108,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3015,
											"end": 3108,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3015,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3133,
											"end": 3135,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3128,
											"end": 3131,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3136,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3117,
											"end": 3136,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3117,
											"end": 3136,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2776,
											"end": 3142,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2776,
											"end": 3142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2776,
											"end": 3142,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2776,
											"end": 3142,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3148,
											"end": 3514,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3148,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3290,
											"end": 3293,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3311,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 3375,
											"end": 3377,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 3370,
											"end": 3373,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3311,
											"end": 3378,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3311,
											"end": 3378,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 3311,
											"end": 3378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3304,
											"end": 3378,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3304,
											"end": 3378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3476,
											"end": 3479,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 3387,
											"end": 3480,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3387,
											"end": 3480,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3387,
											"end": 3480,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3507,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3500,
											"end": 3503,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3508,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3489,
											"end": 3508,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3489,
											"end": 3508,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3514,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3514,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3514,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3514,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3520,
											"end": 3886,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 3520,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3665,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3683,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3747,
											"end": 3749,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 3742,
											"end": 3745,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3683,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3683,
											"end": 3750,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3683,
											"end": 3750,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3683,
											"end": 3750,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3676,
											"end": 3750,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3676,
											"end": 3750,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3759,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 3848,
											"end": 3851,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3759,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3759,
											"end": 3852,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3759,
											"end": 3852,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 3759,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3877,
											"end": 3879,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3872,
											"end": 3875,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3868,
											"end": 3880,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 3880,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 3880,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 3886,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 3886,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 3886,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 3886,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3892,
											"end": 4010,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3892,
											"end": 4010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3997,
											"end": 4002,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 3979,
											"end": 4003,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3979,
											"end": 4003,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3979,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 3977,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3967,
											"end": 4004,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3892,
											"end": 4010,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3892,
											"end": 4010,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3892,
											"end": 4010,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4016,
											"end": 4238,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 4016,
											"end": 4238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4109,
											"end": 4113,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4147,
											"end": 4149,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4136,
											"end": 4145,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4132,
											"end": 4150,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4124,
											"end": 4150,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4124,
											"end": 4150,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4160,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 4228,
											"end": 4229,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4217,
											"end": 4226,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4213,
											"end": 4230,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4210,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4160,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 4160,
											"end": 4231,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4160,
											"end": 4231,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 4160,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4238,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4238,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4238,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4238,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4238,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4244,
											"end": 4686,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 4244,
											"end": 4686,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4393,
											"end": 4397,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4431,
											"end": 4433,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4420,
											"end": 4429,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4416,
											"end": 4434,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4434,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4434,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4444,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 4512,
											"end": 4513,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4501,
											"end": 4510,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4514,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4488,
											"end": 4494,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4444,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 4444,
											"end": 4515,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4444,
											"end": 4515,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 4444,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4525,
											"end": 4597,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4593,
											"end": 4595,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4582,
											"end": 4591,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4596,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4569,
											"end": 4575,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4525,
											"end": 4597,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 4525,
											"end": 4597,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4525,
											"end": 4597,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4525,
											"end": 4597,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4607,
											"end": 4679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4675,
											"end": 4677,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4664,
											"end": 4673,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4660,
											"end": 4678,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4651,
											"end": 4657,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4607,
											"end": 4679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 4607,
											"end": 4679,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4607,
											"end": 4679,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4607,
											"end": 4679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4686,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4686,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4686,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4686,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4686,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4686,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4686,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4692,
											"end": 5024,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 4692,
											"end": 5024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4813,
											"end": 4817,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4851,
											"end": 4853,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4840,
											"end": 4849,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4836,
											"end": 4854,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4828,
											"end": 4854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4828,
											"end": 4854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4864,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 4932,
											"end": 4933,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4921,
											"end": 4930,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4917,
											"end": 4934,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4908,
											"end": 4914,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4864,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 4864,
											"end": 4935,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4864,
											"end": 4935,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 4864,
											"end": 4935,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4945,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 5013,
											"end": 5015,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5002,
											"end": 5011,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4998,
											"end": 5016,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4989,
											"end": 4995,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4945,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 4945,
											"end": 5017,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4945,
											"end": 5017,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4945,
											"end": 5017,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4692,
											"end": 5024,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4692,
											"end": 5024,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4692,
											"end": 5024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4692,
											"end": 5024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4692,
											"end": 5024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4692,
											"end": 5024,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5030,
											"end": 5449,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 5030,
											"end": 5449,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5196,
											"end": 5200,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5234,
											"end": 5236,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5223,
											"end": 5232,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5237,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5237,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5283,
											"end": 5292,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5277,
											"end": 5281,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5273,
											"end": 5293,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5269,
											"end": 5270,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5258,
											"end": 5267,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5254,
											"end": 5271,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5247,
											"end": 5294,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 5437,
											"end": 5441,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 5311,
											"end": 5442,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5311,
											"end": 5442,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 5311,
											"end": 5442,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5442,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5442,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5030,
											"end": 5449,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5030,
											"end": 5449,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5030,
											"end": 5449,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5030,
											"end": 5449,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5455,
											"end": 5874,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 5455,
											"end": 5874,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5659,
											"end": 5661,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5648,
											"end": 5657,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5644,
											"end": 5662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5636,
											"end": 5662,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5636,
											"end": 5662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5708,
											"end": 5717,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5702,
											"end": 5706,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5698,
											"end": 5718,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5694,
											"end": 5695,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5683,
											"end": 5692,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5679,
											"end": 5696,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5672,
											"end": 5719,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5736,
											"end": 5867,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 5862,
											"end": 5866,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5736,
											"end": 5867,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 5736,
											"end": 5867,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5736,
											"end": 5867,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 5736,
											"end": 5867,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5728,
											"end": 5867,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5728,
											"end": 5867,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5455,
											"end": 5874,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5455,
											"end": 5874,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5455,
											"end": 5874,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5455,
											"end": 5874,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5880,
											"end": 6299,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5880,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6046,
											"end": 6050,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6084,
											"end": 6086,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6073,
											"end": 6082,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6069,
											"end": 6087,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6061,
											"end": 6087,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6061,
											"end": 6087,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6133,
											"end": 6142,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6127,
											"end": 6131,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6123,
											"end": 6143,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6119,
											"end": 6120,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6108,
											"end": 6117,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6121,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6097,
											"end": 6144,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6161,
											"end": 6292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 6287,
											"end": 6291,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6161,
											"end": 6292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 6161,
											"end": 6292,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6161,
											"end": 6292,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 6161,
											"end": 6292,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6292,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6292,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5880,
											"end": 6299,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5880,
											"end": 6299,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5880,
											"end": 6299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5880,
											"end": 6299,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6305,
											"end": 6724,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 6305,
											"end": 6724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6471,
											"end": 6475,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6509,
											"end": 6511,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6498,
											"end": 6507,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6512,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6486,
											"end": 6512,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6486,
											"end": 6512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6558,
											"end": 6567,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6556,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6548,
											"end": 6568,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6544,
											"end": 6545,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6542,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6546,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6522,
											"end": 6569,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6586,
											"end": 6717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 6712,
											"end": 6716,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6586,
											"end": 6717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 6586,
											"end": 6717,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6586,
											"end": 6717,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 6586,
											"end": 6717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6578,
											"end": 6717,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6578,
											"end": 6717,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6305,
											"end": 6724,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6305,
											"end": 6724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6305,
											"end": 6724,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6305,
											"end": 6724,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6730,
											"end": 7149,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 6730,
											"end": 7149,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6896,
											"end": 6900,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6934,
											"end": 6936,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6923,
											"end": 6932,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6919,
											"end": 6937,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6911,
											"end": 6937,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6911,
											"end": 6937,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6983,
											"end": 6992,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6977,
											"end": 6981,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6973,
											"end": 6993,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6969,
											"end": 6970,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6958,
											"end": 6967,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6954,
											"end": 6971,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6947,
											"end": 6994,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7011,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 7137,
											"end": 7141,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7011,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 7011,
											"end": 7142,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7011,
											"end": 7142,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 7011,
											"end": 7142,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7003,
											"end": 7142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7003,
											"end": 7142,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6730,
											"end": 7149,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6730,
											"end": 7149,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6730,
											"end": 7149,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6730,
											"end": 7149,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7236,
											"end": 7405,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 7236,
											"end": 7405,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7320,
											"end": 7331,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7354,
											"end": 7360,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7349,
											"end": 7352,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7342,
											"end": 7361,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7394,
											"end": 7398,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7389,
											"end": 7392,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7385,
											"end": 7399,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7370,
											"end": 7399,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7370,
											"end": 7399,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7236,
											"end": 7405,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7236,
											"end": 7405,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7236,
											"end": 7405,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7236,
											"end": 7405,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7236,
											"end": 7405,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7411,
											"end": 7507,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 7411,
											"end": 7507,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7448,
											"end": 7455,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7477,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 7495,
											"end": 7500,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7477,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 7477,
											"end": 7501,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7477,
											"end": 7501,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 7477,
											"end": 7501,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7466,
											"end": 7501,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7466,
											"end": 7501,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7411,
											"end": 7507,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7411,
											"end": 7507,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7411,
											"end": 7507,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7411,
											"end": 7507,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7513,
											"end": 7639,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 7513,
											"end": 7639,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7550,
											"end": 7557,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7590,
											"end": 7632,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7583,
											"end": 7588,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7579,
											"end": 7633,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7568,
											"end": 7633,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7568,
											"end": 7633,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7513,
											"end": 7639,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7513,
											"end": 7639,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7513,
											"end": 7639,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7513,
											"end": 7639,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7645,
											"end": 7722,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 7645,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7682,
											"end": 7689,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7711,
											"end": 7716,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7700,
											"end": 7716,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7700,
											"end": 7716,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7645,
											"end": 7722,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7645,
											"end": 7722,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7645,
											"end": 7722,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7645,
											"end": 7722,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7851,
											"end": 7968,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 7851,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7960,
											"end": 7961,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7957,
											"end": 7958,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7950,
											"end": 7962,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7974,
											"end": 8202,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 7974,
											"end": 8202,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8114,
											"end": 8148,
											"name": "PUSH",
											"source": 6,
											"value": "43616E6E6F742070657266726F6D207468697320616374696F6E206F6E207361"
										},
										{
											"begin": 8110,
											"end": 8111,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8102,
											"end": 8108,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8112,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8091,
											"end": 8149,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8183,
											"end": 8194,
											"name": "PUSH",
											"source": 6,
											"value": "6D6520746F6B656E730000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8178,
											"end": 8180,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8170,
											"end": 8176,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8166,
											"end": 8181,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8159,
											"end": 8195,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7974,
											"end": 8202,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7974,
											"end": 8202,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8208,
											"end": 8429,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 8208,
											"end": 8429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8348,
											"end": 8382,
											"name": "PUSH",
											"source": 6,
											"value": "576520646F6E2774206861766520656E6F75676820666F722074686973207377"
										},
										{
											"begin": 8344,
											"end": 8345,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8336,
											"end": 8342,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8332,
											"end": 8346,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8325,
											"end": 8383,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8417,
											"end": 8421,
											"name": "PUSH",
											"source": 6,
											"value": "6170000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8412,
											"end": 8414,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8404,
											"end": 8410,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8400,
											"end": 8415,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8393,
											"end": 8422,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8208,
											"end": 8429,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8208,
											"end": 8429,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8435,
											"end": 8602,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 8435,
											"end": 8602,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8575,
											"end": 8594,
											"name": "PUSH",
											"source": 6,
											"value": "6465706F73697420636F6D706C65746564000000000000000000000000000000"
										},
										{
											"begin": 8571,
											"end": 8572,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8563,
											"end": 8569,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8559,
											"end": 8573,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8552,
											"end": 8595,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8435,
											"end": 8602,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8435,
											"end": 8602,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8608,
											"end": 8778,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 8608,
											"end": 8778,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8748,
											"end": 8770,
											"name": "PUSH",
											"source": 6,
											"value": "7769746864726177616C20636F6D706C65746564000000000000000000000000"
										},
										{
											"begin": 8744,
											"end": 8745,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8736,
											"end": 8742,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8732,
											"end": 8746,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8725,
											"end": 8771,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8608,
											"end": 8778,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8608,
											"end": 8778,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8784,
											"end": 8954,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 8784,
											"end": 8954,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8924,
											"end": 8946,
											"name": "PUSH",
											"source": 6,
											"value": "5769746864726177616C20436F6D706C65746564000000000000000000000000"
										},
										{
											"begin": 8920,
											"end": 8921,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8912,
											"end": 8918,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8908,
											"end": 8922,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8901,
											"end": 8947,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8784,
											"end": 8954,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8784,
											"end": 8954,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8960,
											"end": 9082,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 8960,
											"end": 9082,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 9051,
											"end": 9056,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 9033,
											"end": 9057,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9033,
											"end": 9057,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 9033,
											"end": 9057,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9026,
											"end": 9031,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9023,
											"end": 9058,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 9013,
											"end": 9076,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 9013,
											"end": 9076,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9072,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9069,
											"end": 9070,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9062,
											"end": 9074,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9013,
											"end": 9076,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 9013,
											"end": 9076,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 9082,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 9082,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9088,
											"end": 9210,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 9088,
											"end": 9210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9161,
											"end": 9185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 9179,
											"end": 9184,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9161,
											"end": 9185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 9161,
											"end": 9185,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9161,
											"end": 9185,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 9161,
											"end": 9185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9154,
											"end": 9159,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9151,
											"end": 9186,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 9141,
											"end": 9204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 9141,
											"end": 9204,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9200,
											"end": 9201,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9197,
											"end": 9198,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9190,
											"end": 9202,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9141,
											"end": 9204,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 9141,
											"end": 9204,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9088,
											"end": 9210,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9088,
											"end": 9210,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"deposit(address,uint256)": "47e7ef24",
							"exchange(address,address,uint256)": "969e3756",
							"withdrawal(address,uint256)": "5a6b26ba"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"exchange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":\"Pool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol\":{\"keccak256\":\"0x1b47b537450535baf0c661d1f60c3fa23da4e02655a8351d3a8a8d654c5f6475\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://61dbe089248d8e04b360bb91709aa78a878d0028fbacd42a1b29bb5af900b147\",\"dweb:/ipfs/QmdKnheSH1rAvc2rceroFCTSYRMQfi5gaqpQcUr63TmTBw\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0\",\"dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x41506aed9d344097236aaff05216674af38e177288787519d49b71f6396c4af8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47a4a1d11e3e7c610b12da694f3d406527027e7963cfb7bf302af0b902615d7e\",\"dweb:/ipfs/QmeDwStpqytetvjaq7KA7cQRVPDwxmZySYdEXkvw2DDxsr\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":{\"keccak256\":\"0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71\",\"dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f\",\"dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0\",\"dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":701:4291  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":701:4291  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fa8c13566fa115010259d2a30b337530990948dd377c475139dc35c2acb1204064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fa8c13566fa115010259d2a30b337530990948dd377c475139dc35c2acb1204064736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL DUP13 SGT JUMP PUSH16 0xA115010259D2A30B337530990948DD37 PUSH29 0x475139DC35C2ACB1204064736F6C634300080700330000000000000000 ",
							"sourceMap": "701:3590:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fa8c13566fa115010259d2a30b337530990948dd377c475139dc35c2acb1204064736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL DUP13 SGT JUMP PUSH16 0xA115010259D2A30B337530990948DD37 PUSH29 0x475139DC35C2ACB1204064736F6C634300080700330000000000000000 ",
							"sourceMap": "701:3590:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 701,
									"end": 4291,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 4291,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 4291,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 701,
									"end": 4291,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 701,
									"end": 4291,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 701,
									"end": 4291,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 701,
									"end": 4291,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 701,
									"end": 4291,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 701,
									"end": 4291,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 701,
									"end": 4291,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 4291,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 701,
									"end": 4291,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 701,
									"end": 4291,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 701,
									"end": 4291,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 4291,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 701,
									"end": 4291,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 4291,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 4291,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 701,
									"end": 4291,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 4291,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 701,
									"end": 4291,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 701,
									"end": 4291,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 701,
									"end": 4291,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 4291,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 701,
									"end": 4291,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 4291,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 701,
									"end": 4291,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 701,
									"end": 4291,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 4291,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 701,
									"end": 4291,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 701,
									"end": 4291,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 701,
									"end": 4291,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 701,
									"end": 4291,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 701,
									"end": 4291,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 701,
									"end": 4291,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fa8c13566fa115010259d2a30b337530990948dd377c475139dc35c2acb1204064736f6c63430008070033",
									".code": [
										{
											"begin": 701,
											"end": 4291,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 701,
											"end": 4291,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 701,
											"end": 4291,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 701,
											"end": 4291,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 701,
											"end": 4291,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 701,
											"end": 4291,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 701,
											"end": 4291,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 4291,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 701,
											"end": 4291,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0\",\"dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x41506aed9d344097236aaff05216674af38e177288787519d49b71f6396c4af8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47a4a1d11e3e7c610b12da694f3d406527027e7963cfb7bf302af0b902615d7e\",\"dweb:/ipfs/QmeDwStpqytetvjaq7KA7cQRVPDwxmZySYdEXkvw2DDxsr\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":{\"keccak256\":\"0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71\",\"dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":194:9364  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":194:9364  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206dbf542abae670657798e2d1d3ca9a635bae8e06783e5c05da30e0aa629f945264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206dbf542abae670657798e2d1d3ca9a635bae8e06783e5c05da30e0aa629f945264736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xBF542ABAE670657798E2D1D3CA9A PUSH4 0x5BAE8E06 PUSH25 0x3E5C05DA30E0AA629F945264736F6C63430008070033000000 ",
							"sourceMap": "194:9170:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206dbf542abae670657798e2d1d3ca9a635bae8e06783e5c05da30e0aa629f945264736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xBF542ABAE670657798E2D1D3CA9A PUSH4 0x5BAE8E06 PUSH25 0x3E5C05DA30E0AA629F945264736F6C63430008070033000000 ",
							"sourceMap": "194:9170:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9364,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9364,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9364,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9364,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9364,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9364,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9364,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9364,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9364,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9364,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9364,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9364,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9364,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9364,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9364,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9364,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9364,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9364,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9364,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9364,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9364,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9364,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9364,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9364,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9364,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9364,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9364,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9364,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9364,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9364,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9364,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9364,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9364,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9364,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9364,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206dbf542abae670657798e2d1d3ca9a635bae8e06783e5c05da30e0aa629f945264736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 9364,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9364,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9364,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9364,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9364,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9364,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9364,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9364,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9364,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\":{\"keccak256\":\"0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71\",\"dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203f659cafc5bd0a5a9fb4cbbb526b9ebc6c0e625e655fb57ecc12a2bd0b1db1de64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203f659cafc5bd0a5a9fb4cbbb526b9ebc6c0e625e655fb57ecc12a2bd0b1db1de64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH PUSH6 0x9CAFC5BD0A5A SWAP16 0xB4 0xCB 0xBB MSTORE PUSH12 0x9EBC6C0E625E655FB57ECC12 LOG2 0xBD SIGNEXTEND SAR 0xB1 0xDE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "482:6210:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203f659cafc5bd0a5a9fb4cbbb526b9ebc6c0e625e655fb57ecc12a2bd0b1db1de64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH PUSH6 0x9CAFC5BD0A5A SWAP16 0xB4 0xCB 0xBB MSTORE PUSH12 0x9EBC6C0E625E655FB57ECC12 LOG2 0xBD SIGNEXTEND SAR 0xB1 0xDE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "482:6210:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203f659cafc5bd0a5a9fb4cbbb526b9ebc6c0e625e655fb57ecc12a2bd0b1db1de64736f6c63430008070033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f\",\"dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol": {
				"ast": {
					"absolutePath": "gitpopu/solidity/Napolite/contracts/contracts/liquidityPool.sol",
					"exportedSymbols": {
						"Address": [
							907
						],
						"ERC20": [
							74
						],
						"IERC20": [
							260
						],
						"IERC20Permit": [
							296
						],
						"Pool": [
							182
						],
						"SafeERC20": [
							577
						],
						"SafeMath": [
							1219
						]
					},
					"id": 183,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 183,
							"sourceUnit": 578,
							"src": "62:118:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 183,
							"sourceUnit": 1220,
							"src": "181:110:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 74,
							"linearizedBaseContracts": [
								74
							],
							"name": "ERC20",
							"nameLocation": "303:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "06fdde03",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "324:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "328:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "353:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 5,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "353:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "352:15:0"
									},
									"scope": 74,
									"src": "315:53:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "382:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "388:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "413:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 10,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "413:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "412:15:0"
									},
									"scope": 74,
									"src": "373:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 18,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "442:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "453:2:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "479:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "479:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "478:6:0"
									},
									"scope": 74,
									"src": "433:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "499:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "who",
												"nameLocation": "517:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "509:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "508:13:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "545:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "545:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "544:6:0"
									},
									"scope": 74,
									"src": "490:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "565:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "582:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "574:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "591:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "586:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "586:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "573:24:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "606:0:0"
									},
									"scope": 74,
									"src": "556:51:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 40,
									"name": "Transfer",
									"nameLocation": "618:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "643:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "627:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "627:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "665:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "649:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "649:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "674:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "669:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "669:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "626:54:0"
									},
									"src": "612:69:0"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 49,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "695:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "713:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "705:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "705:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "728:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "720:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "720:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "704:32:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "755:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "755:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "754:6:0"
									},
									"scope": 74,
									"src": "686:75:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "775:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "796:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "788:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "788:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "810:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "802:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "819:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "814:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "814:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:38:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "834:0:0"
									},
									"scope": 74,
									"src": "766:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 65,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "849:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "865:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "857:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "857:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "879:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "874:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "874:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "856:29:0"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "894:0:0"
									},
									"scope": 74,
									"src": "840:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 73,
									"name": "Approval",
									"nameLocation": "906:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "931:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "915:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "954:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "938:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "938:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "968:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "963:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "963:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "914:60:0"
									},
									"src": "900:75:0"
								}
							],
							"scope": 183,
							"src": "293:684:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 182,
							"linearizedBaseContracts": [
								182
							],
							"name": "Pool",
							"nameLocation": "988:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 78,
									"libraryName": {
										"id": 75,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 577,
										"src": "1005:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "999:26:0",
									"typeName": {
										"id": 77,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 76,
											"name": "ERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 74,
											"src": "1019:5:0"
										},
										"referencedDeclaration": 74,
										"src": "1019:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$74",
											"typeString": "contract ERC20"
										}
									}
								},
								{
									"id": 81,
									"libraryName": {
										"id": 79,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1219,
										"src": "1036:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "1030:24:0",
									"typeName": {
										"id": 80,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1049:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"anonymous": false,
									"id": 85,
									"name": "Deposit",
									"nameLocation": "1066:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"indexed": false,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "1081:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "1074:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 82,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1074:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1073:16:0"
									},
									"src": "1060:30:0"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "1147:121:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 96,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1183:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1183:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 100,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1203:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pool_$182",
																		"typeString": "contract Pool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pool_$182",
																		"typeString": "contract Pool"
																	}
																],
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1195:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 98,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1195:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1195:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 102,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "1210:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 93,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 87,
																	"src": "1163:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 92,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "1157:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$74_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1157:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$74",
																"typeString": "contract ERC20"
															}
														},
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 58,
														"src": "1157:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1157:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "1157:60:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "6465706f73697420636f6d706c65746564",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5d45a008227df390341187ada612f6ac6b99cb49cf9874ff10cd14191c4479ff",
																"typeString": "literal_string \"deposit completed\""
															},
															"value": "deposit completed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_5d45a008227df390341187ada612f6ac6b99cb49cf9874ff10cd14191c4479ff",
																"typeString": "literal_string \"deposit completed\""
															}
														],
														"id": 105,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "1233:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1233:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 108,
												"nodeType": "EmitStatement",
												"src": "1228:33:0"
											}
										]
									},
									"functionSelector": "47e7ef24",
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "1105:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1121:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "1113:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1113:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1133:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "1128:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1128:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1112:28:0"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1147:0:0"
									},
									"scope": 182,
									"src": "1096:172:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1329:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 121,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1361:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1361:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 123,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "1373:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 118,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 112,
																	"src": "1345:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 117,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "1339:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$74_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1339:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$74",
																"typeString": "contract ERC20"
															}
														},
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 32,
														"src": "1339:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1339:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 125,
												"nodeType": "ExpressionStatement",
												"src": "1339:41:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "5769746864726177616c20436f6d706c65746564",
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1404:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a4dae7bf733d5447bddea2526dfe4532d4379e58c407b7103c66818f22b1dc89",
																"typeString": "literal_string \"Withdrawal Completed\""
															},
															"value": "Withdrawal Completed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_a4dae7bf733d5447bddea2526dfe4532d4379e58c407b7103c66818f22b1dc89",
																"typeString": "literal_string \"Withdrawal Completed\""
															}
														],
														"id": 126,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "1396:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1396:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 129,
												"nodeType": "EmitStatement",
												"src": "1391:36:0"
											}
										]
									},
									"functionSelector": "5a6b26ba",
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawal",
									"nameLocation": "1284:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1303:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1295:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1295:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1315:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1310:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1310:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1294:28:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1329:0:0"
									},
									"scope": 182,
									"src": "1275:159:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "1503:342:0",
										"statements": [
											{
												"assignments": [
													141
												],
												"declarations": [
													{
														"constant": false,
														"id": 141,
														"mutability": "mutable",
														"name": "tokenBalance",
														"nameLocation": "1518:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 180,
														"src": "1513:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 140,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1513:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 151,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 148,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1561:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Pool_$182",
																		"typeString": "contract Pool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Pool_$182",
																		"typeString": "contract Pool"
																	}
																],
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1553:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 146,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1553:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1553:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 143,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "1539:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 142,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "1533:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$74_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1533:9:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$74",
																"typeString": "contract ERC20"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 25,
														"src": "1533:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1533:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1513:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 153,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "1594:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 154,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "1602:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1594:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742070657266726f6d207468697320616374696f6e206f6e2073616d6520746f6b656e73",
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1606:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0fce19fda0b55d82196faec75d47f152df53879a0deae83f860d145614bc6c6b",
																"typeString": "literal_string \"Cannot perfrom this action on same tokens\""
															},
															"value": "Cannot perfrom this action on same tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0fce19fda0b55d82196faec75d47f152df53879a0deae83f860d145614bc6c6b",
																"typeString": "literal_string \"Cannot perfrom this action on same tokens\""
															}
														],
														"id": 152,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1586:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1586:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 158,
												"nodeType": "ExpressionStatement",
												"src": "1586:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 160,
																"name": "tokenBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "1668:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 161,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "1682:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1668:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "576520646f6e2774206861766520656e6f75676820666f7220746869732073776170",
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1690:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_466947e3cb62bbcdf7efd5b5905101328c5d7bf4e9ecd70e796fecb53c764163",
																"typeString": "literal_string \"We don't have enough for this swap\""
															},
															"value": "We don't have enough for this swap"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_466947e3cb62bbcdf7efd5b5905101328c5d7bf4e9ecd70e796fecb53c764163",
																"typeString": "literal_string \"We don't have enough for this swap\""
															}
														],
														"id": 159,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1660:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1660:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "1660:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 167,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "1746:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 168,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "1752:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 166,
														"name": "deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "1738:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1738:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "1738:21:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 172,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 135,
															"src": "1780:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 173,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "1784:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 171,
														"name": "withdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "1769:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1769:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "1769:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "7769746864726177616c20636f6d706c65746564",
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1815:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a35a10b44ba1b516bbe3f69ca378c9a77b3e4f5cac34c0b5b70d8f25c2df4f8",
																"typeString": "literal_string \"withdrawal completed\""
															},
															"value": "withdrawal completed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_8a35a10b44ba1b516bbe3f69ca378c9a77b3e4f5cac34c0b5b70d8f25c2df4f8",
																"typeString": "literal_string \"withdrawal completed\""
															}
														],
														"id": 176,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "1807:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1807:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 179,
												"nodeType": "EmitStatement",
												"src": "1802:36:0"
											}
										]
									},
									"functionSelector": "969e3756",
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exchange",
									"nameLocation": "1449:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1466:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1458:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1458:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1480:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1472:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1472:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1489:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1484:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1484:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1457:39:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1503:0:0"
									},
									"scope": 182,
									"src": "1440:405:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 183,
							"src": "979:870:0",
							"usedErrors": []
						}
					],
					"src": "36:1813:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							260
						]
					},
					"id": 261,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 184,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 185,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 260,
							"linearizedBaseContracts": [
								260
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 194,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 203,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 260,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 260,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 260,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 237,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 260,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 260,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 259,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "2668:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "2682:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "2694:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:1"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "2728:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 256,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:1"
									},
									"scope": 260,
									"src": "2646:88:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 261,
							"src": "202:2534:1",
							"usedErrors": []
						}
					],
					"src": "106:2631:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							296
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 262,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 263,
								"nodeType": "StructuredDocumentation",
								"src": "133:480:2",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 296,
							"linearizedBaseContracts": [
								296
							],
							"name": "IERC20Permit",
							"nameLocation": "624:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "643:792:2",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 281,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1449:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1473:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "1465:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1496:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "1488:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1488:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1521:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "1513:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1513:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1544:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "1536:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1568:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "1562:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 273,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1562:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1587:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "1579:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 275,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1579:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1606:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "1598:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 277,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1598:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1455:158:2"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1622:0:2"
									},
									"scope": 296,
									"src": "1440:183:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "1629:294:2",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 289,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1937:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1952:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1944:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1944:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1943:15:2"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1982:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1981:9:2"
									},
									"scope": 296,
									"src": "1928:63:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "1997:128:2",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 295,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2192:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2208:2:2"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2234:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 292,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2233:9:2"
									},
									"scope": 296,
									"src": "2183:60:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 297,
							"src": "614:1631:2",
							"usedErrors": []
						}
					],
					"src": "108:2138:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							907
						],
						"IERC20": [
							260
						],
						"IERC20Permit": [
							296
						],
						"SafeERC20": [
							577
						]
					},
					"id": 578,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 298,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:3"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 578,
							"sourceUnit": 261,
							"src": "140:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 300,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 578,
							"sourceUnit": 297,
							"src": "164:40:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 301,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 578,
							"sourceUnit": 908,
							"src": "205:36:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 302,
								"nodeType": "StructuredDocumentation",
								"src": "243:457:3",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 577,
							"linearizedBaseContracts": [
								577
							],
							"name": "SafeERC20",
							"nameLocation": "709:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 305,
									"libraryName": {
										"id": 303,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 907,
										"src": "731:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "725:26:3",
									"typeName": {
										"id": 304,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "743:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "829:103:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 316,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "859:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$260",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 319,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 308,
																			"src": "889:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$260",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 227,
																		"src": "889:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "889:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 322,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 310,
																	"src": "914:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 323,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 312,
																	"src": "918:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 317,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "866:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 318,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "866:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "866:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$260",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 315,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "839:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$260_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "839:86:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "839:86:3"
											}
										]
									},
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "766:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "786:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "779:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$260",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 307,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 306,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 260,
														"src": "779:6:3"
													},
													"referencedDeclaration": 260,
													"src": "779:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$260",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "801:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "793:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "813:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "805:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:41:3"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "829:0:3"
									},
									"scope": 577,
									"src": "757:175:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "1028:113:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 341,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "1058:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$260",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 344,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 331,
																			"src": "1088:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$260",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 259,
																		"src": "1088:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1088:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 347,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 333,
																	"src": "1117:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 348,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "1123:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 349,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 337,
																	"src": "1127:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 342,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1065:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 343,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1065:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1065:68:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$260",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 340,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "1038:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$260_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1038:96:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "1038:96:3"
											}
										]
									},
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "947:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "971:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "964:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$260",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 330,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 329,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 260,
														"src": "964:6:3"
													},
													"referencedDeclaration": 260,
													"src": "964:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$260",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "986:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "978:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "978:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1000:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "992:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "992:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1012:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1004:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:55:3"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1028:0:3"
									},
									"scope": 577,
									"src": "938:203:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "1477:497:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 366,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 362,
																			"src": "1726:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1735:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1726:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 369,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1725:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 374,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1766:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$577",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$577",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 373,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1758:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 372,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1758:7:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 375,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1758:13:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 376,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 360,
																					"src": "1773:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 370,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 358,
																					"src": "1742:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$260",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 371,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 237,
																				"src": "1742:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1742:39:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1785:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1742:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 380,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1741:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1725:62:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1801:56:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 365,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1704:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1704:163:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "1704:163:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 386,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "1897:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$260",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 389,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 358,
																			"src": "1927:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$260",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 247,
																		"src": "1927:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1927:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 392,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "1951:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 393,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "1960:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 387,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1904:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1904:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1904:62:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$260",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 385,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "1877:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$260_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1877:90:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "1877:90:3"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "1147:249:3",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1410:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1429:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "1422:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$260",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 357,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 356,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 260,
														"src": "1422:6:3"
													},
													"referencedDeclaration": 260,
													"src": "1422:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$260",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1444:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "1436:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1436:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1461:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "1453:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1453:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1421:46:3"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1477:0:3"
									},
									"scope": 577,
									"src": "1401:573:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "2066:194:3",
										"statements": [
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2084:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 433,
														"src": "2076:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 408,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2076:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 420,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 414,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2123:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$577",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$577",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2115:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 412,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2115:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2115:13:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 416,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "2130:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 410,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "2099:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$260",
																	"typeString": "contract IERC20"
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 237,
															"src": "2099:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2099:39:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 418,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "2141:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2099:47:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2076:70:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 422,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "2176:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$260",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 425,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "2206:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$260",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 247,
																		"src": "2206:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2206:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 428,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "2230:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 429,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "2239:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 423,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2183:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2183:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2183:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$260",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 421,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "2156:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$260_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2156:97:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 432,
												"nodeType": "ExpressionStatement",
												"src": "2156:97:3"
											}
										]
									},
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "1989:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2018:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "2011:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$260",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 400,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 399,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 260,
														"src": "2011:6:3"
													},
													"referencedDeclaration": 260,
													"src": "2011:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$260",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "2025:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2050:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "2042:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2042:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2010:46:3"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2066:0:3"
									},
									"scope": 577,
									"src": "1980:280:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "2352:370:3",
										"statements": [
											{
												"id": 480,
												"nodeType": "UncheckedBlock",
												"src": "2362:354:3",
												"statements": [
													{
														"assignments": [
															445
														],
														"declarations": [
															{
																"constant": false,
																"id": 445,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2394:12:3",
																"nodeType": "VariableDeclaration",
																"scope": 480,
																"src": "2386:20:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 444,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2386:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 454,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 450,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2433:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$577",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$577",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2425:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 448,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2425:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2425:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 452,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 439,
																	"src": "2440:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 446,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "2409:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$260",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 237,
																"src": "2409:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2409:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2386:62:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 456,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 445,
																		"src": "2470:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 457,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 441,
																		"src": "2486:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2470:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2493:43:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 455,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2462:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2462:75:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 461,
														"nodeType": "ExpressionStatement",
														"src": "2462:75:3"
													},
													{
														"assignments": [
															463
														],
														"declarations": [
															{
																"constant": false,
																"id": 463,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2559:12:3",
																"nodeType": "VariableDeclaration",
																"scope": 480,
																"src": "2551:20:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 462,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2551:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 467,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 464,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "2574:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 465,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 441,
																"src": "2589:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2574:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2551:43:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 469,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "2628:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$260",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 472,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 437,
																					"src": "2658:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$260",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 247,
																				"src": "2658:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2658:22:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 475,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 439,
																			"src": "2682:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 476,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 463,
																			"src": "2691:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 470,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2635:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2635:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2635:69:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$260",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 468,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "2608:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$260_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2608:97:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 479,
														"nodeType": "ExpressionStatement",
														"src": "2608:97:3"
													}
												]
											}
										]
									},
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2275:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2304:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2297:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$260",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 436,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 435,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 260,
														"src": "2297:6:3"
													},
													"referencedDeclaration": 260,
													"src": "2297:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$260",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2319:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2311:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2311:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2336:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2328:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2328:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2296:46:3"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2352:0:3"
									},
									"scope": 577,
									"src": "2266:456:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "2943:257:3",
										"statements": [
											{
												"assignments": [
													503
												],
												"declarations": [
													{
														"constant": false,
														"id": 503,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "2961:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 537,
														"src": "2953:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 502,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2953:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 508,
												"initialValue": {
													"arguments": [
														{
															"id": 506,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "2988:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 504,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "2975:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$296",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 289,
														"src": "2975:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2975:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2953:41:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 512,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "3017:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 513,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "3024:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 514,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "3033:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 515,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "3040:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 516,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "3050:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 517,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "3053:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 518,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "3056:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 509,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "3004:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$296",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 281,
														"src": "3004:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3004:54:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "3004:54:3"
											},
											{
												"assignments": [
													522
												],
												"declarations": [
													{
														"constant": false,
														"id": 522,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "3076:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 537,
														"src": "3068:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 521,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3068:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 527,
												"initialValue": {
													"arguments": [
														{
															"id": 525,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "3102:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 523,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "3089:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$296",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 289,
														"src": "3089:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3089:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3068:40:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 529,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 522,
																"src": "3126:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 530,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 503,
																	"src": "3140:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3154:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3140:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3126:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3157:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 528,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3118:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3118:75:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "3118:75:3"
											}
										]
									},
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "2737:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2770:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "2757:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$296",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 484,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 483,
														"name": "IERC20Permit",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 296,
														"src": "2757:12:3"
													},
													"referencedDeclaration": 296,
													"src": "2757:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$296",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2793:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "2785:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2785:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2816:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "2808:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2808:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2841:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "2833:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2833:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2864:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "2856:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2856:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "2888:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "2882:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 494,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2882:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2907:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "2899:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 496,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2899:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "2926:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "2918:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 498,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2918:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2747:186:3"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2943:0:3"
									},
									"scope": 577,
									"src": "2728:472:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "3653:636:3",
										"statements": [
											{
												"assignments": [
													548
												],
												"declarations": [
													{
														"constant": false,
														"id": 548,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4015:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 575,
														"src": "4002:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 547,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4002:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 557,
												"initialValue": {
													"arguments": [
														{
															"id": 554,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "4056:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4062:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 551,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "4036:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$260",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$260",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 550,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4028:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 549,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4028:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4028:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 667,
														"src": "4028:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4028:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4002:95:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 558,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "4111:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 559,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4111:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 560,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4131:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4111:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 574,
												"nodeType": "IfStatement",
												"src": "4107:176:3",
												"trueBody": {
													"id": 573,
													"nodeType": "Block",
													"src": "4134:149:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 565,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 548,
																				"src": "4206:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 567,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4219:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 566,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "4219:4:3",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 568,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4218:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 563,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4195:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 564,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "4195:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4195:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4227:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 562,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4187:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4187:85:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 572,
															"nodeType": "ExpressionStatement",
															"src": "4187:85:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "3206:372:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3592:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3619:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "3612:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$260",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 541,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 540,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 260,
														"src": "3612:6:3"
													},
													"referencedDeclaration": 260,
													"src": "3612:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$260",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3639:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "3626:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 543,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3626:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:33:3"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3653:0:3"
									},
									"scope": 577,
									"src": "3583:706:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 578,
							"src": "701:3590:3",
							"usedErrors": []
						}
					],
					"src": "115:4177:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							907
						]
					},
					"id": 908,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 579,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 580,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 907,
							"linearizedBaseContracts": [
								907
							],
							"name": "Address",
							"nameLocation": "202:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "1478:254:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 588,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 583,
																"src": "1702:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1702:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1702:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1702:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 587,
												"id": 593,
												"nodeType": "Return",
												"src": "1695:30:4"
											}
										]
									},
									"documentation": {
										"id": 581,
										"nodeType": "StructuredDocumentation",
										"src": "216:1191:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1421:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1440:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "1432:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:17:4"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "1472:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 585,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:6:4"
									},
									"scope": 907,
									"src": "1412:320:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "2719:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 606,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2745:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$907",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$907",
																				"typeString": "library Address"
																			}
																		],
																		"id": 605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2737:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 604,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2737:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2737:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2737:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 609,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 600,
																"src": "2762:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2737:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2770:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 603,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2729:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2729:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 613,
												"nodeType": "ExpressionStatement",
												"src": "2729:73:4"
											},
											{
												"assignments": [
													615,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 615,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2819:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 628,
														"src": "2814:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 614,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2814:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 622,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2862:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 616,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "2832:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2832:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 619,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 618,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 600,
																"src": "2854:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2832:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2832:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2813:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 624,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "2883:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2892:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 623,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2875:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2875:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 627,
												"nodeType": "ExpressionStatement",
												"src": "2875:78:4"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "1738:905:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2657:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2683:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "2667:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "2694:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2666:43:4"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2719:0:4"
									},
									"scope": 907,
									"src": "2648:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 646,
										"nodeType": "Block",
										"src": "3791:96:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 640,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "3830:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 641,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "3838:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3844:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3847:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 639,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															687,
															731
														],
														"referencedDeclaration": 731,
														"src": "3808:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3808:72:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 638,
												"id": 645,
												"nodeType": "Return",
												"src": "3801:79:4"
											}
										]
									},
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "2966:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3711:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3732:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "3724:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3724:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3753:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "3740:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 633,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3740:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3723:35:4"
									},
									"returnParameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "3777:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 636,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3777:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3776:14:4"
									},
									"scope": 907,
									"src": "3702:185:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 666,
										"nodeType": "Block",
										"src": "4256:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 660,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "4295:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 661,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "4303:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 663,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "4312:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 659,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															687,
															731
														],
														"referencedDeclaration": 731,
														"src": "4273:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4273:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 658,
												"id": 665,
												"nodeType": "Return",
												"src": "4266:59:4"
											}
										]
									},
									"documentation": {
										"id": 648,
										"nodeType": "StructuredDocumentation",
										"src": "3893:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4118:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4148:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "4140:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4140:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4177:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "4164:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 651,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4164:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4205:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "4191:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 653,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4191:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4130:93:4"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "4242:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 656,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4242:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4241:14:4"
									},
									"scope": 907,
									"src": "4109:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 686,
										"nodeType": "Block",
										"src": "4807:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 680,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "4846:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 681,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "4854:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 682,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "4860:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4867:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 679,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															687,
															731
														],
														"referencedDeclaration": 731,
														"src": "4824:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4824:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 678,
												"id": 685,
												"nodeType": "Return",
												"src": "4817:94:4"
											}
										]
									},
									"documentation": {
										"id": 668,
										"nodeType": "StructuredDocumentation",
										"src": "4338:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4703:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4733:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "4725:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4725:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4754:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "4741:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 671,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4741:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4768:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "4760:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4760:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4724:50:4"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "4793:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 676,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4792:14:4"
									},
									"scope": 907,
									"src": "4694:224:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 730,
										"nodeType": "Block",
										"src": "5345:267:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 704,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5371:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$907",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$907",
																				"typeString": "library Address"
																			}
																		],
																		"id": 703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5363:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 702,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5363:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5363:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5363:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 707,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 694,
																"src": "5388:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5363:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5395:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 701,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5355:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5355:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "5355:81:4"
											},
											{
												"assignments": [
													713,
													715
												],
												"declarations": [
													{
														"constant": false,
														"id": 713,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5452:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 730,
														"src": "5447:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 712,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5447:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 715,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5474:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 730,
														"src": "5461:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 714,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5461:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 722,
												"initialValue": {
													"arguments": [
														{
															"id": 720,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "5514:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 716,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "5488:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5488:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 719,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 718,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 694,
																"src": "5507:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5488:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5488:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5446:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 724,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "5563:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 725,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "5571:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 726,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "5580:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 727,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "5592:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 723,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "5536:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5536:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 700,
												"id": 729,
												"nodeType": "Return",
												"src": "5529:76:4"
											}
										]
									},
									"documentation": {
										"id": 688,
										"nodeType": "StructuredDocumentation",
										"src": "4924:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5175:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5214:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "5206:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5206:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5243:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "5230:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 691,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5230:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5265:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "5257:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5257:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5294:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "5280:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 695,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5280:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5196:116:4"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "5331:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 698,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5331:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:14:4"
									},
									"scope": 907,
									"src": "5166:446:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 747,
										"nodeType": "Block",
										"src": "5889:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 742,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "5925:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 743,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "5933:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5939:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 741,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															748,
															777
														],
														"referencedDeclaration": 777,
														"src": "5906:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5906:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 740,
												"id": 746,
												"nodeType": "Return",
												"src": "5899:80:4"
											}
										]
									},
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "5618:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5798:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5825:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "5817:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5817:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5846:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "5833:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 735,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5833:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5816:35:4"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "5875:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 738,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5875:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5874:14:4"
									},
									"scope": 907,
									"src": "5789:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 776,
										"nodeType": "Block",
										"src": "6328:168:4",
										"statements": [
											{
												"assignments": [
													761,
													763
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6344:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 776,
														"src": "6339:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 760,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6339:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 763,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6366:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 776,
														"src": "6353:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 762,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6353:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 768,
												"initialValue": {
													"arguments": [
														{
															"id": 766,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "6398:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 764,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "6380:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 765,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6380:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6380:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6338:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 770,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "6447:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 771,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "6455:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 772,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "6464:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 773,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "6476:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 769,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "6420:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6420:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 759,
												"id": 775,
												"nodeType": "Return",
												"src": "6413:76:4"
											}
										]
									},
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "5992:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 777,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6179:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6215:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "6207:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6207:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6244:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "6231:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 752,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6231:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6272:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "6258:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 754,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6258:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6197:93:4"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "6314:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 757,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6314:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6313:14:4"
									},
									"scope": 907,
									"src": "6170:326:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 793,
										"nodeType": "Block",
										"src": "6772:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 788,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "6810:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 789,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "6818:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6824:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 787,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															794,
															823
														],
														"referencedDeclaration": 823,
														"src": "6789:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6789:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 786,
												"id": 792,
												"nodeType": "Return",
												"src": "6782:84:4"
											}
										]
									},
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "6502:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6684:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6713:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "6705:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6705:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6734:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "6721:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 781,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6721:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6704:35:4"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "6758:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 784,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6758:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6757:14:4"
									},
									"scope": 907,
									"src": "6675:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 822,
										"nodeType": "Block",
										"src": "7214:170:4",
										"statements": [
											{
												"assignments": [
													807,
													809
												],
												"declarations": [
													{
														"constant": false,
														"id": 807,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7230:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 822,
														"src": "7225:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 806,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7225:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 809,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7252:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 822,
														"src": "7239:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 808,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7239:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 814,
												"initialValue": {
													"arguments": [
														{
															"id": 812,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "7286:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 810,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "7266:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 811,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7266:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7266:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7224:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 816,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "7335:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 817,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "7343:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 818,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "7352:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 819,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "7364:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 815,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "7308:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7308:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 805,
												"id": 821,
												"nodeType": "Return",
												"src": "7301:76:4"
											}
										]
									},
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "6879:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7068:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7106:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "7098:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7098:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7135:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "7122:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 798,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7122:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7163:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "7149:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 800,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7149:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7088:93:4"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "7200:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 803,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7200:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7199:14:4"
									},
									"scope": 907,
									"src": "7059:325:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "7866:434:4",
										"statements": [
											{
												"condition": {
													"id": 837,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 828,
													"src": "7880:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 859,
													"nodeType": "Block",
													"src": "8236:58:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 855,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 830,
																		"src": "8258:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 856,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 832,
																		"src": "8270:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 854,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 906,
																	"src": "8250:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8250:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 858,
															"nodeType": "ExpressionStatement",
															"src": "8250:33:4"
														}
													]
												},
												"id": 860,
												"nodeType": "IfStatement",
												"src": "7876:418:4",
												"trueBody": {
													"id": 853,
													"nodeType": "Block",
													"src": "7889:341:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 838,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 830,
																		"src": "7907:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7907:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7928:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7907:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 850,
															"nodeType": "IfStatement",
															"src": "7903:286:4",
															"trueBody": {
																"id": 849,
																"nodeType": "Block",
																"src": "7931:258:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 844,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 826,
																							"src": "8133:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 843,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 595,
																						"src": "8122:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 845,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8122:18:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 846,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8142:31:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 842,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8114:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 847,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8114:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 848,
																		"nodeType": "ExpressionStatement",
																		"src": "8114:60:4"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 851,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 830,
																"src": "8209:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 836,
															"id": 852,
															"nodeType": "Return",
															"src": "8202:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 824,
										"nodeType": "StructuredDocumentation",
										"src": "7390:277:4",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7681:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7725:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "7717:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7717:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7746:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "7741:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 827,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7741:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7776:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "7763:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 829,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7763:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7810:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "7796:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 831,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7796:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7707:121:4"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "7852:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 834,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7852:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7851:14:4"
									},
									"scope": 907,
									"src": "7672:628:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "8681:135:4",
										"statements": [
											{
												"condition": {
													"id": 874,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 865,
													"src": "8695:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 883,
													"nodeType": "Block",
													"src": "8752:58:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 879,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 867,
																		"src": "8774:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 880,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 869,
																		"src": "8786:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 878,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 906,
																	"src": "8766:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8766:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 882,
															"nodeType": "ExpressionStatement",
															"src": "8766:33:4"
														}
													]
												},
												"id": 884,
												"nodeType": "IfStatement",
												"src": "8691:119:4",
												"trueBody": {
													"id": 877,
													"nodeType": "Block",
													"src": "8704:42:4",
													"statements": [
														{
															"expression": {
																"id": 875,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 867,
																"src": "8725:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 873,
															"id": 876,
															"nodeType": "Return",
															"src": "8718:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "8306:210:4",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8530:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8561:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "8556:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 864,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8556:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8591:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "8578:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 866,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8578:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8625:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "8611:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 868,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8611:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8546:97:4"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "8667:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 871,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8667:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8666:14:4"
									},
									"scope": 907,
									"src": "8521:295:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "8905:457:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 893,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "8981:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8981:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 895,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9001:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8981:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "9311:45:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 900,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 890,
																		"src": "9332:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 899,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9325:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9325:20:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 902,
															"nodeType": "ExpressionStatement",
															"src": "9325:20:4"
														}
													]
												},
												"id": 904,
												"nodeType": "IfStatement",
												"src": "8977:379:4",
												"trueBody": {
													"id": 898,
													"nodeType": "Block",
													"src": "9004:301:4",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9162:133:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9180:40:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9209:10:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9203:5:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9203:17:4"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9184:15:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9248:2:4",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9252:10:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9244:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9244:19:4"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9265:15:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9237:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9237:44:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9237:44:4"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 888,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9209:10:4",
																	"valueSize": 1
																},
																{
																	"declaration": 888,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9252:10:4",
																	"valueSize": 1
																}
															],
															"id": 897,
															"nodeType": "InlineAssembly",
															"src": "9153:142:4"
														}
													]
												}
											}
										]
									},
									"id": 906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8831:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8852:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "8839:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 887,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8839:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8878:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "8864:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 889,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8864:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8838:53:4"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8905:0:4"
									},
									"scope": 907,
									"src": "8822:540:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 908,
							"src": "194:9170:4",
							"usedErrors": []
						}
					],
					"src": "101:9264:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1219
						]
					},
					"id": 1220,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 909,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 910,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:5",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1219,
							"linearizedBaseContracts": [
								1219
							],
							"name": "SafeMath",
							"nameLocation": "490:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 941,
										"nodeType": "Block",
										"src": "717:140:5",
										"statements": [
											{
												"id": 940,
												"nodeType": "UncheckedBlock",
												"src": "727:124:5",
												"statements": [
													{
														"assignments": [
															923
														],
														"declarations": [
															{
																"constant": false,
																"id": 923,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 940,
																"src": "751:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 922,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 927,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 924,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "763:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 925,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "767:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 928,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 923,
																"src": "786:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 929,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "790:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 935,
														"nodeType": "IfStatement",
														"src": "782:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 932,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 933,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 921,
															"id": 934,
															"nodeType": "Return",
															"src": "793:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 937,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 923,
																	"src": "838:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 938,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 921,
														"id": 939,
														"nodeType": "Return",
														"src": "824:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:5",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "657:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "668:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:5"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "702:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 917,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "708:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:5"
									},
									"scope": 1219,
									"src": "641:216:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 969,
										"nodeType": "Block",
										"src": "1078:113:5",
										"statements": [
											{
												"id": 968,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 954,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 947,
																"src": "1116:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 955,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 945,
																"src": "1120:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 961,
														"nodeType": "IfStatement",
														"src": "1112:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 959,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 953,
															"id": 960,
															"nodeType": "Return",
															"src": "1123:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 963,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 945,
																		"src": "1168:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 964,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "1172:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 966,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 953,
														"id": 967,
														"nodeType": "Return",
														"src": "1154:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:5",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "1018:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "1029:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:5"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "1063:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 949,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "1069:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:5"
									},
									"scope": 1219,
									"src": "1002:189:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1011,
										"nodeType": "Block",
										"src": "1415:417:5",
										"statements": [
											{
												"id": 1010,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 982,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 973,
																"src": "1683:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 989,
														"nodeType": "IfStatement",
														"src": "1679:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 985,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 987,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 981,
															"id": 988,
															"nodeType": "Return",
															"src": "1691:16:5"
														}
													},
													{
														"assignments": [
															991
														],
														"declarations": [
															{
																"constant": false,
																"id": 991,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 1010,
																"src": "1721:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 990,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 995,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 992,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 973,
																"src": "1733:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 993,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "1737:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 996,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 991,
																	"src": "1756:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 997,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 973,
																	"src": "1760:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 999,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "1765:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1005,
														"nodeType": "IfStatement",
														"src": "1752:33:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1001,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1002,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1003,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 981,
															"id": 1004,
															"nodeType": "Return",
															"src": "1768:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1007,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 991,
																	"src": "1813:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1008,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 981,
														"id": 1009,
														"nodeType": "Return",
														"src": "1799:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 971,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:5",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "1355:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "1366:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:5"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "1400:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 977,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "1406:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:5"
									},
									"scope": 1219,
									"src": "1339:493:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1039,
										"nodeType": "Block",
										"src": "2057:114:5",
										"statements": [
											{
												"id": 1038,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1024,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1017,
																"src": "2095:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1031,
														"nodeType": "IfStatement",
														"src": "2091:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1029,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1023,
															"id": 1030,
															"nodeType": "Return",
															"src": "2103:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1033,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1015,
																		"src": "2148:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1034,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1017,
																		"src": "2152:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1036,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1023,
														"id": 1037,
														"nodeType": "Return",
														"src": "2134:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1013,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:5",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "1997:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "2008:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:5"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "2042:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1019,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "2048:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:5"
									},
									"scope": 1219,
									"src": "1981:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1067,
										"nodeType": "Block",
										"src": "2406:114:5",
										"statements": [
											{
												"id": 1066,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1052,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1045,
																"src": "2444:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1053,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1059,
														"nodeType": "IfStatement",
														"src": "2440:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1056,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1057,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1051,
															"id": 1058,
															"nodeType": "Return",
															"src": "2452:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1061,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1043,
																		"src": "2497:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1062,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1045,
																		"src": "2501:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1064,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1051,
														"id": 1065,
														"nodeType": "Return",
														"src": "2483:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1041,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "2346:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "2357:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:5"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "2391:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1047,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "2397:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:5"
									},
									"scope": 1219,
									"src": "2330:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "2822:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1078,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1071,
														"src": "2839:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1079,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "2843:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1077,
												"id": 1081,
												"nodeType": "Return",
												"src": "2832:12:5"
											}
										]
									},
									"documentation": {
										"id": 1069,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "2768:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "2779:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:5"
									},
									"returnParameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "2813:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:5"
									},
									"scope": 1219,
									"src": "2755:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1097,
										"nodeType": "Block",
										"src": "3189:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1093,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1086,
														"src": "3206:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1094,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "3210:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1092,
												"id": 1096,
												"nodeType": "Return",
												"src": "3199:12:5"
											}
										]
									},
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "3135:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "3146:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:5"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "3180:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:5"
									},
									"scope": 1219,
									"src": "3122:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "3532:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1108,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1101,
														"src": "3549:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1109,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "3553:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1107,
												"id": 1111,
												"nodeType": "Return",
												"src": "3542:12:5"
											}
										]
									},
									"documentation": {
										"id": 1099,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "3478:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "3489:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:5"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "3523:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:5"
									},
									"scope": 1219,
									"src": "3465:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "3917:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1123,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1116,
														"src": "3934:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1124,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1118,
														"src": "3938:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1122,
												"id": 1126,
												"nodeType": "Return",
												"src": "3927:12:5"
											}
										]
									},
									"documentation": {
										"id": 1114,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "3863:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "3874:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:5"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "3908:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:5"
									},
									"scope": 1219,
									"src": "3850:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "4466:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1138,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "4483:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1139,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "4487:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1137,
												"id": 1141,
												"nodeType": "Return",
												"src": "4476:12:5"
											}
										]
									},
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "4412:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "4423:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:5"
									},
									"returnParameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "4457:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:5"
									},
									"scope": 1219,
									"src": "4399:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1167,
										"nodeType": "Block",
										"src": "5054:106:5",
										"statements": [
											{
												"id": 1166,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1156,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1148,
																		"src": "5096:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1157,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1146,
																		"src": "5101:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1159,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1150,
																	"src": "5104:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1155,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1161,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1162,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1146,
																"src": "5138:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1163,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1148,
																"src": "5142:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1154,
														"id": 1165,
														"nodeType": "Return",
														"src": "5131:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1144,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "4972:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "4983:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "4994:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1149,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:5"
									},
									"returnParameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "5045:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:5"
									},
									"scope": 1219,
									"src": "4959:201:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1192,
										"nodeType": "Block",
										"src": "5739:105:5",
										"statements": [
											{
												"id": 1191,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1181,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1173,
																		"src": "5781:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1184,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1175,
																	"src": "5788:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1180,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1186,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1187,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1171,
																"src": "5822:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1188,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "5826:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1179,
														"id": 1190,
														"nodeType": "Return",
														"src": "5815:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1169,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "5657:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "5668:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "5679:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1174,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:5"
									},
									"returnParameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "5730:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:5"
									},
									"scope": 1219,
									"src": "5644:200:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1217,
										"nodeType": "Block",
										"src": "6585:105:5",
										"statements": [
											{
												"id": 1216,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1206,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1198,
																		"src": "6627:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1209,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "6634:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1205,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1211,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1212,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1196,
																"src": "6668:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1213,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1198,
																"src": "6672:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1204,
														"id": 1215,
														"nodeType": "Return",
														"src": "6661:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1194,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "6503:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "6514:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "6525:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1199,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:5"
									},
									"returnParameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "6576:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:5"
									},
									"scope": 1219,
									"src": "6490:200:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1220,
							"src": "482:6210:5",
							"usedErrors": []
						}
					],
					"src": "107:6586:5"
				},
				"id": 5
			}
		}
	}
}